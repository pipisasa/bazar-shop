{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { Waypoint } from 'react-waypoint'; // import SearchBox from 'components/SearchBox/SearchBox';\n\nimport { SearchContext } from 'contexts/search/search.context';\nimport { useStickyDispatch } from 'contexts/app/app.provider';\nimport { FormattedMessage } from 'react-intl';\nimport { BannerWrapper, BannerHeading, BannerSubHeading, BannerComponent } from './Banner.style'; // -----------------\n\nimport Carousel from 'react-multi-carousel';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { ArrowNext, ArrowPrev } from '../../components/AllSvgIcon';\nimport { useLocale } from 'contexts/language/language.provider';\n\nconst Banner = ({\n  intlTitleId,\n  intlDescriptionId,\n  color\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(SearchContext);\n  const router = useRouter(); // const { text } = state;\n\n  const {\n    pathname\n  } = router;\n\n  const handleSearchInput = text => {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread(_objectSpread({}, state), {}, {\n        text\n      })\n    });\n  };\n\n  function handleClickSearchButton() {\n    const {\n      page\n    } = state,\n          urlState = _objectWithoutProperties(state, [\"page\"]);\n\n    router.push({\n      pathname: pathname,\n      query: _objectSpread({}, urlState)\n    }, {\n      pathname: pathname === '/' ? `${pathname}grocery` : pathname,\n      query: _objectSpread({}, urlState)\n    }, {\n      shallow: true\n    });\n  }\n\n  const useDispatch = useStickyDispatch();\n  const setSticky = useCallback(() => useDispatch({\n    type: 'SET_STICKY'\n  }), [useDispatch]);\n  const removeSticky = useCallback(() => useDispatch({\n    type: 'REMOVE_STICKY'\n  }), [useDispatch]);\n\n  const onWaypointPositionChange = ({\n    currentPosition\n  }) => {\n    if (!currentPosition || currentPosition === 'above') {\n      setSticky();\n    }\n  };\n\n  return __jsx(BannerWrapper, null, __jsx(BannerComponent, {\n    style: {\n      background: color ? color : 'red'\n    }\n  }, __jsx(BannerHeading, null, __jsx(FormattedMessage, {\n    id: intlTitleId,\n    defaultMessage: \"Set Your Title Through Language File\",\n    values: {\n      minute: 90\n    }\n  })), __jsx(BannerSubHeading, null, __jsx(FormattedMessage, {\n    id: intlDescriptionId,\n    defaultMessage: \"Set Your Description Through Language File\"\n  })), __jsx(Waypoint, {\n    onEnter: removeSticky,\n    onLeave: setSticky,\n    onPositionChange: onWaypointPositionChange\n  })));\n}; // ---------------------------------------------------------------\n\n\nconst ButtonPrev = styled('button').withConfig({\n  displayName: \"Banner__ButtonPrev\",\n  componentId: \"sc-1w4k5dh-0\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;left:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nconst ButtonNext = styled('button').withConfig({\n  displayName: \"Banner__ButtonNext\",\n  componentId: \"sc-1w4k5dh-1\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;right:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nconst ButtonGroupWrapper = styled('div').withConfig({\n  displayName: \"Banner__ButtonGroupWrapper\",\n  componentId: \"sc-1w4k5dh-2\"\n})([\"\"]);\n\nconst PrevButton = ({\n  onClick,\n  children\n}) => {\n  return __jsx(ButtonPrev, {\n    onClick: e => {\n      e.preventDefault();\n      onClick();\n    },\n    className: \"prevButton\"\n  }, children);\n};\n\nconst NextButton = ({\n  onClick,\n  children\n}) => {\n  return __jsx(ButtonNext, {\n    onClick: e => {\n      e.preventDefault();\n      onClick();\n    },\n    className: \"nextButton\"\n  }, children);\n};\n\nconst ButtonGroup = ({\n  next,\n  previous\n}) => {\n  const {\n    isRtl\n  } = useLocale();\n  return __jsx(ButtonGroupWrapper, null, isRtl ? __jsx(React.Fragment, null, __jsx(NextButton, {\n    onClick: () => next(),\n    className: \"rtl\"\n  }, __jsx(ArrowPrev, null)), __jsx(PrevButton, {\n    onClick: () => previous()\n  }, __jsx(ArrowNext, null))) : __jsx(React.Fragment, null, __jsx(PrevButton, {\n    onClick: () => previous()\n  }, __jsx(ArrowPrev, null)), __jsx(NextButton, {\n    onClick: () => next()\n  }, __jsx(ArrowNext, null))));\n};\n\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport const BannerCarousel = (_ref) => {\n  let {\n    data,\n    deviceType: {\n      mobile,\n      tablet,\n      desktop\n    },\n    component,\n    autoPlay = false,\n    infinite = true,\n    customLeftArrow,\n    customRightArrow,\n    itemClass,\n    isRtl\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\", \"deviceType\", \"component\", \"autoPlay\", \"infinite\", \"customLeftArrow\", \"customRightArrow\", \"itemClass\", \"isRtl\"]);\n\n  let deviceType = 'desktop';\n\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      padding: '90px 0 0 0'\n    },\n    dir: \"ltr\"\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, __jsx(Carousel, _extends({\n    arrows: false,\n    responsive: responsive,\n    ssr: true,\n    showDots: false,\n    slidesToSlide: 1,\n    infinite: infinite,\n    containerClass: \"container-with-dots\",\n    itemClass: itemClass,\n    deviceType: deviceType,\n    autoPlay: autoPlay,\n    autoPlaySpeed: 5000,\n    renderButtonGroupOutside: true,\n    additionalTransfrom: 0,\n    customButtonGroup: __jsx(ButtonGroup, null)\n  }, props), data.map((item, index) => {\n    if (component) return component(item);\n    return __jsx(Banner, {\n      intlTitleId: \"womenClothsTitle\",\n      intlDescriptionId: \"womenClothsSubTitle\",\n      key: item.id,\n      color: item.color\n    });\n  }))));\n};\nexport default Banner;","map":null,"metadata":{},"sourceType":"module"}
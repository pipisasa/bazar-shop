{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateContact.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT, CREATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nconst CreateOrUpdateContact = ({\n  item\n}) => {\n  const initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    number: item.number || ''\n  };\n  const [addContactMutation] = useMutation(item && item.slug ? UPDATE_CONTACT : CREATE_CONTACT);\n  const {\n    // state, \n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    // console.log(values)\n    const {\n      data\n    } = await addContactMutation({\n      variables: {\n        slug: values.slug,\n        number: values.number,\n        type: values.type\n      }\n    }); // console.log(values, 'formik values');\n\n    dispatch({\n      type: 'ADD_OR_UPDATE_CONTACT',\n      payload: data\n    });\n    closeModal();\n    setSubmitting(false);\n  };\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, item && item.id ? 'Edit Contact' : 'Add New Contact'), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(MaskedInput, {\n    mask: [// '(',\n    /[1-9]/, /\\d/, /\\d/, // ')',\n    // ' ',\n    /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d?/, /\\d?/, /\\d?/, /\\d?/, /\\d?/, /\\d?/],\n    className: \"form-control\",\n    placeholder: \"Enter a phone number\",\n    guide: false,\n    id: \"my-input-id\",\n    value: values.number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: \"number\",\n    render: (ref, props) => __jsx(StyledInput, _extends({\n      ref: ref\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), __jsx(ErrorMessage, {\n    name: \"number\",\n    component: StyledError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    title: \"Save Contact\",\n    size: \"medium\",\n    fullwidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default CreateOrUpdateContact;\nconst StyledInput = styled.input.withConfig({\n  displayName: \"UpdateContact__StyledInput\",\n  componentId: \"sc-1nqsrie-0\"\n})([\"width:100%;height:54px;border-radius:6px;font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:400;padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('colors.fontFamily', 'Lato, sans-serif'), themeGet('colors.borderColor', '#e6e6e6'), themeGet('colors.darkBold', '#0D1136'), themeGet('colors.primary', '#009e7f'), themeGet('colorsdarkRegular', '#77798C'));\nconst StyledError = styled.div.withConfig({\n  displayName: \"UpdateContact__StyledError\",\n  componentId: \"sc-1nqsrie-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateContact.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","MaskedInput","ProfileContext","Button","UPDATE_CONTACT","CREATE_CONTACT","FieldWrapper","Heading","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","initialValues","id","slug","type","addContactMutation","dispatch","handleSubmit","values","setSubmitting","data","variables","payload","handleChange","handleBlur","isSubmitting","ref","props","StyledError","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT, CREATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\n\ntype Props = {\n  item?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: number | null;\n  slug: string;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required'),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n  const initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    number: item.number || '',\n  };\n  const [addContactMutation] = useMutation((item && item.slug) ?  UPDATE_CONTACT : CREATE_CONTACT);\n  const { \n    // state, \n  dispatch } = useContext(ProfileContext);\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\n    // console.log(values)\n    const {data} = await addContactMutation({\n      variables: {\n        slug: values.slug,\n        number: values.number,\n        type: values.type\n      },\n    });\n    // console.log(values, 'formik values');\n    dispatch({ type: 'ADD_OR_UPDATE_CONTACT', payload: data });\n    closeModal();\n    setSubmitting(false);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {item && item.id ? 'Edit Contact' : 'Add New Contact'}\n          </Heading>\n          <FieldWrapper>\n            <MaskedInput\n              mask={[\n                // '(',\n                /[1-9]/,\n                /\\d/,\n                /\\d/,\n                // ')',\n                // ' ',\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n              ]}\n              className='form-control'\n              placeholder='Enter a phone number'\n              guide={false}\n              id='my-input-id'\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='number'\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            />\n          </FieldWrapper>\n          <ErrorMessage name='number' component={StyledError} />\n\n          <Button\n            disabled={isSubmitting}\n            type='submit'\n            title='Save Contact'\n            size='medium'\n            fullwidth={true}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 6px;\n  font-family: ${themeGet('colors.fontFamily', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.borderColor', '#e6e6e6')};\n  color: ${themeGet('colors.darkBold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: 400;\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colorsdarkRegular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}
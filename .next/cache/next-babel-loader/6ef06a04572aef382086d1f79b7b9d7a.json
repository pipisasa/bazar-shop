{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport Loader from 'components/Loader/Loader';\nimport Input from 'components/Input/Input';\nimport Uploader from 'components/Uploader/Uploader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport FormWrapper, { Row, Col, Container, FormTitleWrapper, FormTitle, NoteText, Heading, DeliveryAddress, ButtonGroup, Contact, SubmitBtnWrapper } from './RequestMedicine.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\n\nvar Checkout = function Checkout() {\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isValid = _useState2[0],\n      setIsValid = _useState2[1];\n\n  var address = state.address,\n      contact = state.contact;\n\n  var _useMutation = useMutation(DELETE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteContactMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteAddressMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(DELETE_CARD),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      deletePaymentCardMutation = _useMutation6[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              Router.push('/medicine');\n              setLoading(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Add or edit modal\n\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var handleEditDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item, type, name) {\n      var modalComponent;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(type === 'edit')) {\n                _context2.next = 5;\n                break;\n              }\n\n              modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n              handleModal(modalComponent, item);\n              _context2.next = 21;\n              break;\n\n            case 5:\n              _context2.t0 = name;\n              _context2.next = _context2.t0 === 'payment' ? 8 : _context2.t0 === 'contact' ? 12 : _context2.t0 === 'address' ? 16 : 20;\n              break;\n\n            case 8:\n              dispatch({\n                type: 'DELETE_CARD',\n                payload: item.id\n              });\n              _context2.next = 11;\n              return deletePaymentCardMutation({\n                variables: {\n                  cardId: JSON.stringify(item.id)\n                }\n              });\n\n            case 11:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 12:\n              dispatch({\n                type: 'DELETE_CONTACT',\n                payload: item.id\n              });\n              _context2.next = 15;\n              return deleteContactMutation({\n                variables: {\n                  contactId: JSON.stringify(item.id)\n                }\n              });\n\n            case 15:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 16:\n              dispatch({\n                type: 'DELETE_ADDRESS',\n                payload: item.id\n              });\n              _context2.next = 19;\n              return deleteAddressMutation({\n                variables: {\n                  addressId: JSON.stringify(item.id)\n                }\n              });\n\n            case 19:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 20:\n              return _context2.abrupt(\"return\", false);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleEditDelete(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", null, __jsx(FormWrapper, null, __jsx(Container, null, __jsx(FormTitleWrapper, null, __jsx(FormTitle, null, __jsx(FormattedMessage, {\n    id: \"reqMedicine\",\n    defaultMessage: \"Request Medicine\"\n  }))), __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"noteHead\",\n    defaultMessage: \"Note\"\n  })), __jsx(NoteText, null, __jsx(FormattedMessage, {\n    id: \"noteDescription\",\n    defaultMessage: \"Product availability & price will confirm over phone. Delivery Charge inside the city ${inside} & outside the city ${outside}.\",\n    values: {\n      inside: 5,\n      outside: 10\n    }\n  })), __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Input, {\n    type: \"text\",\n    label: \"Medicine Name\",\n    value: \"\",\n    onUpdate: function onUpdate() {\n      return console.log('hello');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"rmMedicineName\"\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Input, {\n    type: \"text\",\n    label: \"Quantity\",\n    value: \"\",\n    onUpdate: function onUpdate() {\n      return console.log('hello');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"rmMedicineQuantity\"\n  }))), __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Input, {\n    type: \"text\",\n    label: \"Medicine Name\",\n    value: \"\",\n    onUpdate: function onUpdate() {\n      return console.log('hello');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"rmMedicineName\"\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Input, {\n    type: \"text\",\n    label: \"Quantity\",\n    value: \"\",\n    onUpdate: function onUpdate() {\n      return console.log('hello');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"rmMedicineQuantity\"\n  }))), __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12\n  }, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"rmPrescripttionUpload\",\n    defaultMessage: \"Upload your prescription\"\n  }))), __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12\n  }, __jsx(Uploader, {\n    onChange: \"\",\n    intlUploadText: \"rmUploadText\"\n  }))), __jsx(DeliveryAddress, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: address,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.name,\n        content: item.info,\n        name: \"address\",\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_ADDRESS',\n            payload: item.id.toString()\n          });\n        },\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'address');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'address');\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Adderss\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addAddressBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateAddress, 'add-address-modal');\n      }\n    })\n  }))), __jsx(Contact, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: contact,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.type,\n        content: item.number,\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_CONTACT',\n            payload: item.id.toString()\n          });\n        },\n        name: \"contact\",\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'contact');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'contact');\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Contact\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addContactBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateContact, 'add-contact-modal');\n      }\n    })\n  }))), __jsx(SubmitBtnWrapper, null, __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"button\",\n    title: \"Submit Request\",\n    intlButtonId: \"submitRequest\",\n    loader: __jsx(Loader, null),\n    isLoading: loading\n  })))));\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}
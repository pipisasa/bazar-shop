{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/pipi/Documents/pr/bazar-shop/containers/Profile/Order/Order.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\\n    orders(text: $text, limit: $limit, user: $user) {\\n      id\\n      status\\n      deliveryAddress\\n      amount\\n      date\\n      subtotal\\n      deliveryFee\\n      discount\\n      deliveryTime\\n      products {\\n        title\\n        price\\n        total\\n        image\\n        weight\\n        quantity\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemPrice, NoOrderFound } from './Order.style';\nimport OrderDetails from './SingleOrderDetails/OrderDetails';\nimport OrderCard from './OrderCard/OrderCard';\nimport OrderCardMobile from './OrderCard/orderCardMobile';\nimport useComponentSize from 'helper/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nvar progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\nvar GET_ORDERS = gql(_templateObject());\nvar orderTableColumns = [{\n  title: __jsx(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'items',\n  width: 250,\n  ellipsis: true,\n  render: function render(text, record) {\n    return __jsx(ItemWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, __jsx(ImageWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: record.image,\n      alt: record.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), __jsx(ItemDetails, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, __jsx(ItemName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, record.title), __jsx(ItemSize, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, record.weight), __jsx(ItemPrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"$\", record.price)));\n  }\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center',\n  width: 100\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  width: 100,\n  render: function render(text, record) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }\n    }, \"$\", record.total);\n  }\n}];\n\nvar OrdersContent = function OrdersContent(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(''),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useComponentSize = useComponentSize(),\n      _useComponentSize2 = _slicedToArray(_useComponentSize, 2),\n      targetRef = _useComponentSize2[0],\n      size = _useComponentSize2[1];\n\n  var orderListHeight = size.height - 79;\n\n  var _useQuery = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  useEffect(function () {\n    if (data && data.orders && data.orders.length !== 0) {\n      setOrder(data.orders[0]);\n      setActive(data.orders[0].id);\n    }\n  }, [data && data.orders]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, error.message);\n\n  var handleClick = function handleClick(order) {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  console.log(data.orders, 'data.orders', order, 'order');\n  return __jsx(OrderBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, desktop && __jsx(React.Fragment, null, __jsx(OrderListWrapper, {\n    style: {\n      height: size.height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlOrderPageTitle\",\n    defaultMessage: \"My Order\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMin: 420,\n    autoHeightMax: isNaN(orderListHeight) ? 500 : orderListHeight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(OrderList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, data.orders.length !== 0 ? data.orders.map(function (order) {\n    return __jsx(OrderCard, {\n      key: order.id,\n      orderId: order.id,\n      className: order && order.id === active ? 'active' : '',\n      status: progressData[order.status - 1],\n      date: order.date,\n      deliveryTime: order.deliveryTime,\n      amount: order.amount,\n      onClick: function onClick() {\n        handleClick(order);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    });\n  }) : __jsx(NoOrderFound, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }))))), __jsx(OrderDetailsWrapper, {\n    ref: targetRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })), order && order.id && __jsx(OrderDetails, {\n    progressStatus: order.status,\n    progressData: progressData,\n    address: order.deliveryAddress,\n    subtotal: order.subtotal,\n    discount: order.discount,\n    deliveryFee: order.deliveryFee,\n    grandTotal: order.amount,\n    tableData: order.products,\n    columns: orderTableColumns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }))), (mobile || tablet) && __jsx(OrderList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, __jsx(OrderCardMobile, {\n    orders: data.orders,\n    className: order && order.id === active ? 'active' : '',\n    progressData: progressData,\n    columns: orderTableColumns,\n    onClick: function onClick() {\n      handleClick(order);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(OrdersContent, \"xCSTOleP6JUsyiO4/kRwGTau2jI=\", false, function () {\n  return [useComponentSize, useQuery];\n});\n\n_c = OrdersContent;\nexport default OrdersContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersContent\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/bazar-shop/containers/Profile/Order/Order.tsx"],"names":["React","useState","useEffect","gql","Scrollbars","useQuery","OrderBox","OrderListWrapper","OrderList","OrderDetailsWrapper","Title","ImageWrapper","ItemWrapper","ItemDetails","ItemName","ItemSize","ItemPrice","NoOrderFound","OrderDetails","OrderCard","OrderCardMobile","useComponentSize","FormattedMessage","progressData","GET_ORDERS","orderTableColumns","title","dataIndex","key","width","ellipsis","render","text","record","image","weight","price","align","total","OrdersContent","deviceType","mobile","tablet","desktop","order","setOrder","active","setActive","targetRef","size","orderListHeight","height","variables","limit","user","data","error","loading","orders","length","id","message","handleClick","console","log","padding","isNaN","map","status","date","deliveryTime","amount","deliveryAddress","subtotal","discount","deliveryFee","products"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  OrderBox,\n  OrderListWrapper,\n  OrderList,\n  OrderDetailsWrapper,\n  Title,\n  ImageWrapper,\n  ItemWrapper,\n  ItemDetails,\n  ItemName,\n  ItemSize,\n  ItemPrice,\n  NoOrderFound,\n} from './Order.style';\n\nimport OrderDetails from './SingleOrderDetails/OrderDetails';\nimport OrderCard from './OrderCard/OrderCard';\nimport OrderCardMobile from './OrderCard/orderCardMobile';\nimport useComponentSize from 'helper/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\n\nconst progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\n\nconst GET_ORDERS = gql`\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }\n`;\n\nconst orderTableColumns = [\n  {\n    title: <FormattedMessage id='cartItems' defaultMessage='Items' />,\n    dataIndex: '',\n    key: 'items',\n    width: 250,\n    ellipsis: true,\n    render: (text, record) => {\n      return (\n        <ItemWrapper>\n          <ImageWrapper>\n            <img src={record.image} alt={record.title} />\n          </ImageWrapper>\n\n          <ItemDetails>\n            <ItemName>{record.title}</ItemName>\n            <ItemSize>{record.weight}</ItemSize>\n            <ItemPrice>${record.price}</ItemPrice>\n          </ItemDetails>\n        </ItemWrapper>\n      );\n    },\n  },\n  {\n    title: (\n      <FormattedMessage id='intlTableColTitle2' defaultMessage='Quantity' />\n    ),\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    width: 100,\n  },\n  {\n    title: <FormattedMessage id='intlTableColTitle3' defaultMessage='Price' />,\n    dataIndex: '',\n    key: 'price',\n    align: 'right',\n    width: 100,\n    render: (text, record) => {\n      return <p>${record.total}</p>;\n    },\n  },\n];\n\ntype OrderTableProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst OrdersContent: React.FC<OrderTableProps> = ({\n  deviceType: { mobile, tablet, desktop },\n}) => {\n  const [order, setOrder] = useState(null);\n  const [active, setActive] = useState('');\n\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  const { data, error, loading } = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1,\n    },\n  });\n\n  useEffect(() => {\n    if (data && data.orders && data.orders.length !== 0) {\n      setOrder(data.orders[0]);\n      setActive(data.orders[0].id);\n    }\n  }, [data && data.orders]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  if (error) return <div>{error.message}</div>;\n\n  const handleClick = order => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  console.log(data.orders, 'data.orders', order, 'order');\n\n  return (\n    <OrderBox>\n      {desktop && (\n        <>\n          <OrderListWrapper style={{ height: size.height }}>\n            <Title style={{ padding: '0 20px' }}>\n              <FormattedMessage\n                id='intlOrderPageTitle'\n                defaultMessage='My Order'\n              />\n            </Title>\n\n            <Scrollbars\n              universal\n              autoHide\n              autoHeight\n              autoHeightMin={420}\n              autoHeightMax={isNaN(orderListHeight) ? 500 : orderListHeight}\n            >\n              <OrderList>\n                {data.orders.length !== 0 ? (\n                  data.orders.map((order: any) => (\n                    <OrderCard\n                      key={order.id}\n                      orderId={order.id}\n                      className={order && order.id === active ? 'active' : ''}\n                      status={progressData[order.status - 1]}\n                      date={order.date}\n                      deliveryTime={order.deliveryTime}\n                      amount={order.amount}\n                      onClick={() => {\n                        handleClick(order);\n                      }}\n                    />\n                  ))\n                ) : (\n                  <NoOrderFound>\n                    <FormattedMessage\n                      id='intlNoOrderFound'\n                      defaultMessage='No order found'\n                    />\n                  </NoOrderFound>\n                )}\n              </OrderList>\n            </Scrollbars>\n          </OrderListWrapper>\n\n          <OrderDetailsWrapper ref={targetRef}>\n            <Title style={{ padding: '0 20px' }}>\n              <FormattedMessage\n                id='orderDetailsText'\n                defaultMessage='Order Details'\n              />\n            </Title>\n            {order && order.id && (\n              <OrderDetails\n                progressStatus={order.status}\n                progressData={progressData}\n                address={order.deliveryAddress}\n                subtotal={order.subtotal}\n                discount={order.discount}\n                deliveryFee={order.deliveryFee}\n                grandTotal={order.amount}\n                tableData={order.products}\n                columns={orderTableColumns}\n              />\n            )}\n          </OrderDetailsWrapper>\n        </>\n      )}\n\n      {(mobile || tablet) && (\n        <OrderList>\n          <OrderCardMobile\n            orders={data.orders}\n            className={order && order.id === active ? 'active' : ''}\n            progressData={progressData}\n            columns={orderTableColumns}\n            onClick={() => {\n              handleClick(order);\n            }}\n          />\n        </OrderList>\n      )}\n    </OrderBox>\n  );\n};\n\nexport default OrdersContent;\n"]},"metadata":{},"sourceType":"module"}
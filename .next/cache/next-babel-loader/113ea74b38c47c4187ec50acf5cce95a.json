{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/containers/Products/Products.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport ProductCard from 'components/ProductCard/ProductCard';\nimport { ProductsRow, ProductsCol, ButtonWrapper, LoaderWrapper, LoaderItem, ProductCardWrapper } from './Products.style';\nimport { CURRENCY } from 'helper/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/NoResult/NoResult';\nimport Router from 'next/router';\nimport { GET_PRODUCTS } from 'graphql/query/product.query';\nimport { AuthContext } from 'contexts/auth/auth.context'; // import { getLocalState } from 'helper/localStorage';\n// import fakeDB from '../../helper/fakeDB';\n\nvar QuickView = dynamic(_c = function _c() {\n  return import('../QuickView/QuickView');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../QuickView/QuickView')];\n    },\n    modules: ['../QuickView/QuickView']\n  }\n});\n_c2 = QuickView;\nexport var Products = function Products(props) {\n  _s();\n\n  var deviceType = props.deviceType,\n      type = props.type,\n      _props$fetchLimit = props.fetchLimit,\n      fetchLimit = _props$fetchLimit === void 0 ? 8 : _props$fetchLimit,\n      _props$loadMore = props.loadMore,\n      loadMore = _props$loadMore === void 0 ? true : _props$loadMore; // console.log(type, \"Hello\")\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  console.log(router.query);\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: router.query.type,\n      offset: 0,\n      limit: fetchLimit,\n      text: router.query.text,\n      category: router.query.category\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore; // console.log(data)\n  // Quick View Modal\n\n\n  var handleModalClose = function handleModalClose() {\n    var as = router.asPath;\n    router.push(as, as, {\n      shallow: true\n    });\n    closeModal();\n  };\n\n  var handleQuickViewModal = function handleQuickViewModal(modalProps, deviceType, onModalClose) {\n    // if (router.pathname === '/product/[slug]') {\n    //   const as = `/product/${modalProps.slug}`;\n    //   router.push(router.pathname, as);\n    //   return;\n    // }\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: !false,\n      component: QuickView,\n      componentProps: {\n        modalProps: modalProps,\n        deviceType: deviceType,\n        onModalClose: onModalClose\n      },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0\n        }\n      }\n    }); // const href = router.asPath;\n    // const as = `/product/${modalProps.slug}`;\n    // router.push(href, as, { shallow: true });\n  };\n\n  if (loading) {\n    return __jsx(LoaderWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  if (error) {\n    if (error.message === \"Network error: Failed to fetch\") {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }\n      }, \"\\\"Network error!!!\\\"\");\n    }\n\n    if (error.message === \"GraphQL error: Error decoding signature\") {\n      Router.push('/logout');\n    } // console.log(error.message)\n\n\n    return null; // authDispatch({type:'SIGN_OUT'});\n    // return \"Error\"\n    // alert('Error' + error)\n  }\n\n  if (!data || !data.products || data.products.items.length === 0) {\n    return __jsx(NoResultFound, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var handleLoadMore = function handleLoadMore() {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.products.items.length),\n        limit: fetchLimit\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n        toggleLoading(false);\n\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        return {\n          products: {\n            __typename: prev.products.__typename,\n            items: [].concat(_toConsumableArray(prev.products.items), _toConsumableArray(fetchMoreResult.products.items)),\n            hasMore: fetchMoreResult.products.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, data.products.items.map(function (item, index) {\n    var _item$images$;\n\n    return __jsx(ProductsCol, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, function () {\n      item.discountInPercent = item.discountPercent;\n    }(), __jsx(ProductCardWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(Fade, {\n      duration: 800,\n      delay: index * 10,\n      style: {\n        height: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, __jsx(ProductCard, {\n      title: item.title,\n      description: item.description,\n      image: (_item$images$ = item.images[0]) === null || _item$images$ === void 0 ? void 0 : _item$images$.image,\n      weight: item.unit,\n      currency: CURRENCY,\n      price: item.price,\n      salePrice: item.salePrice,\n      discountInPercent: item.discountPercent,\n      data: item,\n      deviceType: deviceType,\n      link: '/product/' + item.slug,\n      onClick: function onClick() {\n        return handleQuickViewModal(item, deviceType, handleModalClose);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }))));\n  })), loadMore && data.hasMore && __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleLoadMore,\n    title: \"Load More\",\n    intlButtonId: \"loadMoreBtn\",\n    size: \"small\",\n    isLoading: loadingMore,\n    loader: __jsx(Loader, {\n      color: \"#009E7F\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }),\n    style: {\n      minWidth: 135,\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#009E7F'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Products, \"zS3CrD+e96ClGG3x8yaZa4FAuj4=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c3 = Products;\nexport default Products;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuickView$dynamic\");\n$RefreshReg$(_c2, \"QuickView\");\n$RefreshReg$(_c3, \"Products\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/containers/Products/Products.tsx"],"names":["React","useState","useContext","useRouter","dynamic","openModal","closeModal","ProductCard","ProductsRow","ProductsCol","ButtonWrapper","LoaderWrapper","LoaderItem","ProductCardWrapper","CURRENCY","useQuery","Button","Loader","Placeholder","Fade","NoResultFound","Router","GET_PRODUCTS","AuthContext","QuickView","Products","props","deviceType","type","fetchLimit","loadMore","router","loadingMore","toggleLoading","console","log","query","variables","offset","limit","text","category","data","error","loading","fetchMore","handleModalClose","as","asPath","push","shallow","handleQuickViewModal","modalProps","onModalClose","show","overlayClassName","closeOnClickOutside","component","componentProps","closeComponent","config","enableResizing","disableDragging","className","width","y","height","transition","mass","tension","friction","authDispatch","message","products","items","length","handleLoadMore","Number","updateQuery","prev","fetchMoreResult","__typename","hasMore","map","item","index","discountInPercent","discountPercent","title","description","images","image","unit","price","salePrice","slug","minWidth","backgroundColor","border","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport ProductCard from 'components/ProductCard/ProductCard';\nimport {\n  ProductsRow,\n  ProductsCol,\n  ButtonWrapper,\n  LoaderWrapper,\n  LoaderItem,\n  ProductCardWrapper,\n} from './Products.style';\nimport { CURRENCY } from 'helper/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/NoResult/NoResult';\nimport Router from 'next/router';\nimport { GET_PRODUCTS } from 'graphql/query/product.query';\nimport { AuthContext } from 'contexts/auth/auth.context';\n// import { getLocalState } from 'helper/localStorage';\n// import fakeDB from '../../helper/fakeDB';\n\nconst QuickView = dynamic(() => import('../QuickView/QuickView'));\n\ntype ProductsProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  type?: string;\n  fetchLimit?: number;\n  loadMore?: boolean;\n};\nexport const Products: React.FC<ProductsProps> = (props) => {\n  const {\n    deviceType,\n    type,\n    fetchLimit = 8,\n    loadMore = true,\n  } = props;\n  // console.log(type, \"Hello\")\n  const router = useRouter(); \n  const [loadingMore, toggleLoading] = useState(false);\n  console.log(router.query)\n  let { data, error, loading, fetchMore } = useQuery(GET_PRODUCTS, {\n    variables:{\n      type: router.query.type,\n      offset: 0,\n      limit: fetchLimit,\n      text:router.query.text,\n      category:router.query.category\n    },\n  });\n  // console.log(data)\n  // Quick View Modal\n  const handleModalClose = () => {\n    const as = router.asPath;\n    router.push(as, as, { shallow: true });\n    closeModal();\n  };\n\n  const handleQuickViewModal = (\n    modalProps: any,\n    deviceType: any,\n    onModalClose: any\n  ) => {\n    // if (router.pathname === '/product/[slug]') {\n    //   const as = `/product/${modalProps.slug}`;\n    //   router.push(router.pathname, as);\n    //   return;\n    // }\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: !false,\n      component: QuickView,\n      componentProps: { modalProps, deviceType, onModalClose },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0,\n        },\n      },\n    });\n    // const href = router.asPath;\n    // const as = `/product/${modalProps.slug}`;\n    // router.push(href, as, { shallow: true });\n  };\n\n  if (loading) {\n    return (\n      <LoaderWrapper>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n      </LoaderWrapper>\n    );\n  }\n\n  \n  const {authDispatch} = useContext<any>(AuthContext)\n  if(error) {\n    if(error.message === \"Network error: Failed to fetch\"){\n      return <div>\"Network error!!!\"</div>\n    }\n    if(error.message === \"GraphQL error: Error decoding signature\"){\n      Router.push('/logout');\n    }\n    // console.log(error.message)\n    return null;\n    // authDispatch({type:'SIGN_OUT'});\n    // return \"Error\"\n    // alert('Error' + error)\n  }\n  if (!data || !data.products || data.products.items.length === 0) {\n    return <NoResultFound />;\n  }\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.products.items.length),\n        limit: fetchLimit,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        toggleLoading(false);\n        if (!fetchMoreResult) {\n          return prev;\n        }\n        return {\n          products: {\n            __typename: prev.products.__typename,\n            items: [...prev.products.items, ...fetchMoreResult.products.items],\n            hasMore: fetchMoreResult.products.hasMore,\n          },\n        };\n      },\n    });\n  };\n\n  return (\n    <>\n      <ProductsRow>\n        {data.products.items.map((item: any, index: number) => (\n          <ProductsCol key={index}>\n            {/* {console.log(item.images)} */}\n            {(()=>{item.discountInPercent = item.discountPercent})()}\n            <ProductCardWrapper>\n              <Fade\n                duration={800}\n                delay={index * 10}\n                style={{ height: '100%' }}\n              >\n                <ProductCard\n                  title={item.title}\n                  description={item.description}\n                  image={item.images[0]?.image}\n                  weight={item.unit}\n                  currency={CURRENCY}\n                  price={item.price}\n                  salePrice={item.salePrice}\n                  discountInPercent={item.discountPercent}\n                  data={item}\n                  deviceType={deviceType}\n                  link={'/product/'+ item.slug}\n                  onClick={() =>\n                    handleQuickViewModal(item, deviceType, handleModalClose)\n                  }\n                />\n              </Fade>\n            </ProductCardWrapper>\n          </ProductsCol>\n        ))}\n      </ProductsRow>\n      {loadMore && data.hasMore && (\n        <ButtonWrapper>\n          <Button\n            onClick={handleLoadMore}\n            title=\"Load More\"\n            intlButtonId=\"loadMoreBtn\"\n            size=\"small\"\n            isLoading={loadingMore}\n            loader={<Loader color=\"#009E7F\" />}\n            style={{\n              minWidth: 135,\n              backgroundColor: '#ffffff',\n              border: '1px solid #f1f1f1',\n              color: '#009E7F',\n            }}\n          />\n        </ButtonWrapper>\n      )}\n    </>\n  );\n};\nexport default (Products);\n"]},"metadata":{},"sourceType":"module"}
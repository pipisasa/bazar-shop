{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport { Button, Wrapper, Container, Heading, SubHeading, HelperText, Offer, Input, Divider, LinkButton } from './SignInOutForm.style';\nimport { Facebook, Google } from 'components/AllSvgIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage } from 'react-intl';\nimport { CREATE_USER } from '../../graphql/mutation/user';\nimport { useMutation } from '@apollo/react-hooks';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nvar a = 0;\n\nvar FakeProgressBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(FakeProgressBar, _React$Component);\n\n  var _super = _createSuper(FakeProgressBar);\n\n  function FakeProgressBar() {\n    var _this;\n\n    _classCallCheck(this, FakeProgressBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"intervalId\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.intervalId = setInterval(function () {\n        if (_this.state.count >= 50) {\n          clearInterval(_this.intervalId);\n        }\n\n        ;\n\n        _this.setState({\n          count: _this.state.count + 30\n        });\n      }, 300);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      clearInterval(_this.intervalId);\n    });\n\n    return _this;\n  }\n\n  _createClass(FakeProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ProgressBar, {\n        total: 100,\n        completed: this.state.count\n      });\n    }\n  }]);\n\n  return FakeProgressBar;\n}(React.Component);\n\nexport default function SignOutModal() {\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch,\n      authState = _useContext.authState;\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useMutation = useMutation(CREATE_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      registerMutation = _useMutation2[0];\n\n  var registerCallback = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$registerMutati, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              authDispatch({\n                type: 'LOADING'\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return registerMutation({\n                variables: {\n                  email: email,\n                  password: password\n                }\n              });\n\n            case 5:\n              _yield$registerMutati = _context.sent;\n              message = _yield$registerMutati.data.createUser.message;\n              authDispatch({\n                type: 'SIGNUP_SUCCESS'\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              // console.log({err})\n              authDispatch({\n                type: 'SIGNUP_ERROR',\n                payload: _context.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function registerCallback(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var toggleSignInForm = function toggleSignInForm() {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n  };\n\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\"\n  })), __jsx(SubHeading, null, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"Every fill is required in sign up\"\n  })), authState.currentForm === 'loading' && __jsx(FakeProgressBar, null), authState.error && __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"*This email already exists\"), __jsx(\"form\", {\n    onSubmit: registerCallback\n  }, __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address or Contact No.\"\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"email\",\n      placeholder: placeholder,\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      required: true\n    });\n  }), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\",\n    values: {\n      minCharacter: 6\n    }\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"text\",\n      placeholder: placeholder,\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      min: 6,\n      required: true\n    });\n  }), __jsx(HelperText, {\n    style: {\n      padding: '20px 0 30px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"By signing up, you agree to Pickbazar's\"\n  }), ' ', __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(FormattedMessage, {\n    id: \"termsConditionText\",\n    defaultMessage: \"Terms & Condtion\"\n  })))), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    style: {\n      color: '#fff'\n    },\n    type: \"submit\"\n  })), __jsx(Divider, null, __jsx(\"span\", null, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\"\n  }))), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Facebook',\n    iconPosition: \"left\",\n    className: \"facebook\",\n    icon: __jsx(Facebook, null),\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueFacebookBtn\",\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Google',\n    className: \"google\",\n    iconPosition: \"left\",\n    icon: __jsx(Google, null),\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueGoogleBtn\",\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"alreadyHaveAccount\",\n    defaultMessage: \"Already have an account?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignInForm\n  }, __jsx(FormattedMessage, {\n    id: \"loginBtnText\",\n    defaultMessage: \"Login\"\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}
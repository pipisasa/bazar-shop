{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { CardElement, injectStripe, Elements, StripeProvider } from 'react-stripe-elements';\nimport { useMutation } from '@apollo/react-hooks';\nimport { closeModal } from '@redq/reuse-modal';\nimport { GET_PAYMENT } from 'graphql/mutation/order';\nimport StripeFormWrapper, { Heading, FieldWrapper } from './StripePaymentForm.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nvar StripeForm = injectStripe(function (_ref) {\n  var getToken = _ref.getToken,\n      buttonText = _ref.buttonText,\n      stripe = _ref.stripe;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$stripe$createT, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return stripe.createToken({\n                name: 'Name'\n              });\n\n            case 2:\n              _yield$stripe$createT = _context.sent;\n              token = _yield$stripe$createT.token;\n              getToken(token);\n\n              if (token) {\n                dispatch({\n                  type: 'ADD_CARD',\n                  payload: token.card\n                });\n                closeModal();\n              }\n\n              console.log(token, 'token');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(StripeFormWrapper, null, __jsx(Heading, null, \"Enter card info\"), __jsx(FieldWrapper, null, __jsx(CardElement, null)), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleSubmit\n  }, buttonText ? buttonText : 'Pay Now'));\n});\n\nvar StripePaymentForm = function StripePaymentForm(_ref3) {\n  var _ref3$item = _ref3.item,\n      price = _ref3$item.price,\n      buttonText = _ref3$item.buttonText;\n\n  var _useMutation = useMutation(GET_PAYMENT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      getPayment = _useMutation2[0];\n\n  var sendTokenToServer = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n      var payment_info;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getPayment({\n                variables: {\n                  paymentInput: JSON.stringify({\n                    token: token,\n                    amount: price\n                  })\n                }\n              });\n\n            case 2:\n              payment_info = _context2.sent;\n              console.log(payment_info, 'payment_info');\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendTokenToServer(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return true && __jsx(StripeProvider, {\n    apiKey: process.env.STRIPE_PUBLIC_KEY\n  }, __jsx(\"div\", {\n    className: \"example\"\n  }, __jsx(Elements, null, __jsx(StripeForm, {\n    getToken: function getToken(token) {\n      return sendTokenToServer(token);\n    },\n    buttonText: buttonText\n  }))));\n};\n\nexport default StripePaymentForm;","map":null,"metadata":{},"sourceType":"module"}
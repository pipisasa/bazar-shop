{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/containers/LayoutContainer/Header/Menu/RightMenu/CartButton.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ShoppingBag } from 'components/AllSvgIcon';\nimport Button from 'components/Button/Button';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport { useCart, CartProvider } from 'contexts/cart/use-cart';\nimport CartModal from 'containers/Cart/Cart';\n\nconst CartButton = () => {\n  const {\n    isOpen,\n    cartItemsCount,\n    toggleCart,\n    calculatePrice\n  } = useCart();\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: CartModal,\n      closeComponent: () => __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }),\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 370\n      }\n    });\n  };\n\n  return __jsx(CartProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: handleModal,\n    style: {\n      padding: \"10px\",\n      marginRight: \"15px\"\n    },\n    size: \"small\",\n    icon: __jsx(ShoppingBag, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }),\n    pointer: cartItemsCount,\n    intlButtonId: \"qwerty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CartButton;","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/containers/LayoutContainer/Header/Menu/RightMenu/CartButton.tsx"],"names":["React","ShoppingBag","Button","openModal","closeModal","useCart","CartProvider","CartModal","CartButton","isOpen","cartItemsCount","toggleCart","calculatePrice","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","padding","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,wBAAtC;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,MAAyDP,OAAO,EAAtE;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxBV,IAAAA,SAAS,CAAC;AACRW,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,WADL;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,cAAc,EAAE,KAJV;AAKNC,QAAAA,eAAe,EAAE,IALX;AAMNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,GADC;AAEVC,UAAAA,QAAQ,EAAE;AAFA;AANN,OAFA;AAaRC,MAAAA,mBAAmB,EAAE,IAbb;AAcRC,MAAAA,SAAS,EAAElB,SAdH;AAeRmB,MAAAA,cAAc,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfd;AAgBRC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,eAAe,EAAExB,UAAnB;AAA+ByB,QAAAA,eAAe,EAAE;AAAhD;AAhBR,KAAD,CAAT;AAkBD,GAnBD;;AAqBA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEhB,WADX;AAEE,IAAA,KAAK,EAAE;AAACiB,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,WAAW,EAAC;AAA7B,KAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAKE,IAAA,OAAO,EAAErB,cALX;AAME,IAAA,YAAY,EAAC,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CApCD;;AAqCA,eAAgBF,UAAhB","sourcesContent":["import React from 'react'\nimport { ShoppingBag } from 'components/AllSvgIcon'\nimport Button from 'components/Button/Button'\nimport { openModal, closeModal } from '@redq/reuse-modal'\nimport { useCart, CartProvider } from 'contexts/cart/use-cart';\nimport { Modal } from '@redq/reuse-modal';\nimport CartModal from 'containers/Cart/Cart';\nimport { withApollo } from 'helper/apollo';\n\nconst CartButton = () => {\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: CartModal,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 370 },\n    });\n  };\n\n  return (\n    <CartProvider>\n      <Button\n        onClick={handleModal}\n        style={{padding:\"10px\", marginRight:\"15px\"}}\n        size=\"small\"\n        icon={<ShoppingBag/>}\n        pointer={cartItemsCount}\n        intlButtonId=\"qwerty\"\n        />\n    </CartProvider>\n  )\n}\nexport default (CartButton);"]},"metadata":{},"sourceType":"module"}
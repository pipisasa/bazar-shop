{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pipi/Documents/pr/shop/pages/logout.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { setLocalState } from 'helper/localStorage'; // the redirect will only happen on the client-side. This is by design,\n\nvar Index = function Index() {\n  _s();\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  useEffect(function () {\n    authDispatch({\n      type: 'SIGN_OUT'\n    });\n    localStorage.removeItem(\"access_token\");\n    setLocalState(\"access_token\", \"\");\n  }, []);\n  var router = useRouter();\n  React.useEffect(function () {\n    router.replace('/');\n  });\n  return __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"meta\", {\n    name: \"robots\",\n    content: \"noindex, nofollow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Index, \"dLoCR9Kcqsez3QoztR6h1evFvQ4=\", false, function () {\n  return [useRouter];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/shop/pages/logout.tsx"],"names":["React","useContext","useEffect","Head","useRouter","AuthContext","setLocalState","Index","authDispatch","type","localStorage","removeItem","router","replace"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B,C,CACA;;AACA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAAA;;AAAA,oBACLN,UAAU,CAAMI,WAAN,CADL;AAAA,MACrBG,YADqB,eACrBA,YADqB;;AAE5BN,EAAAA,SAAS,CAAC,YAAI;AACZM,IAAAA,YAAY,CAAC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAZ;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAL,IAAAA,aAAa,CAAC,cAAD,EAAgB,EAAhB,CAAb;AACD,GAJQ,EAIP,EAJO,CAAT;AAKA,MAAMM,MAAM,GAAGR,SAAS,EAAxB;AACAJ,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpBU,IAAAA,MAAM,CAACC,OAAP,CAAe,GAAf;AACD,GAFD;AAIA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAjBD;;GAAMN,K;UAOWH,S;;;KAPXG,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { setLocalState } from 'helper/localStorage';\n// the redirect will only happen on the client-side. This is by design,\nconst Index: React.FC = () => {\n  const {authDispatch} = useContext<any>(AuthContext)\n  useEffect(()=>{\n    authDispatch({type:'SIGN_OUT'});\n    localStorage.removeItem(\"access_token\");\n    setLocalState(\"access_token\",\"\");\n  },[])\n  const router = useRouter();\n  React.useEffect(() => {\n    router.replace('/');\n  });\n\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
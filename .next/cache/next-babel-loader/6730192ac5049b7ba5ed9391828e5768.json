{"ast":null,"code":"var _jsxFileName = \"/home/roma/Documents/bazar-marketplace-front/packages/shop/pages/product/[slug].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SEO } from 'components/seo';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, { ProductSingleContainer } from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\n\nconst ProductPage = ({\n  deviceType\n}) => {\n  const {\n    query: {\n      slug\n    }\n  } = useRouter();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_PRODUCT_DETAILS, {\n    variables: {\n      slug\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  let content;\n\n  switch (data.productSolo.Type) {\n    case 'BOOK':\n      {\n        content = __jsx(ProductDetailsBook, {\n          product: data.productSolo,\n          deviceType: deviceType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        });\n        break;\n      }\n\n    default:\n      {\n        content = __jsx(ProductDetailsBook, {\n          product: data.productSolo,\n          deviceType: deviceType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }); // content = (\n        //   <ProductDetails product={data.productSolo} deviceType={deviceType} />\n        // );\n      }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: `${data.productSolo.title} - PickBazar`,\n    description: `${data.productSolo.title} Details`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(ProductSingleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(ProductSingleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, content, __jsx(CartPopUp, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default withApollo(ProductPage);","map":{"version":3,"sources":["/home/roma/Documents/bazar-marketplace-front/packages/shop/pages/product/[slug].tsx"],"names":["React","SEO","useRouter","useQuery","ProductDetailsBook","Modal","ProductSingleWrapper","ProductSingleContainer","CartPopUp","withApollo","GET_PRODUCT_DETAILS","ProductPage","deviceType","query","slug","data","error","loading","variables","message","content","productSolo","Type","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,kBAAP,MAA+B,kDAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,oBAAP,IACEC,sBADF,QAEO,6BAFP;AAGA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,mBAAT,QAAoC,6BAApC;;AAUA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACvD,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFZ,SAAS,EAFb;AAIA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bd,QAAQ,CAACO,mBAAD,EAAsB;AAC7DQ,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADkD,GAAtB,CAAzC;;AAIA,MAAIG,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaA,KAAK,CAACG,OAAnB,CAAP;AAEX,MAAIC,OAAJ;;AACA,UAAQL,IAAI,CAACM,WAAL,CAAiBC,IAAzB;AACE,SAAK,MAAL;AAAa;AACXF,QAAAA,OAAO,GACL,MAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEL,IAAI,CAACM,WAAlC;AAA+C,UAAA,UAAU,EAAET,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGA;AACD;;AACD;AAAS;AACPQ,QAAAA,OAAO,GACL,MAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEL,IAAI,CAACM,WAAlC;AAA+C,UAAA,UAAU,EAAET,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADO,CAIP;AACA;AACA;AACD;AAdH;;AAiBA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,KAAK,EAAG,GAAEG,IAAI,CAACM,WAAL,CAAiBE,KAAM,cADnC;AAEE,IAAA,WAAW,EAAG,GAAER,IAAI,CAACM,WAAL,CAAiBE,KAAM,UAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OADH,EAEE,MAAC,SAAD;AAAW,IAAA,UAAU,EAAER,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CANF,CADF;AAiBD,CAlDD;;AAmDA,eAAeH,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { SEO } from 'components/seo';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetails from 'containers/ProductDetails/ProductDetails';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, {\n  ProductSingleContainer,\n} from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\n\ntype Props = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst ProductPage: NextPage<Props> = ({ deviceType }) => {\n  const {\n    query: { slug },\n  } = useRouter();\n\n  const { data, error, loading } = useQuery(GET_PRODUCT_DETAILS, {\n    variables: { slug },\n  });\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  if (error) return <div>Error: {error.message}</div>;\n\n  let content;\n  switch (data.productSolo.Type) {\n    case 'BOOK': {\n      content = (\n        <ProductDetailsBook product={data.productSolo} deviceType={deviceType} />\n      );\n      break;\n    }\n    default: {\n      content = (\n        <ProductDetailsBook product={data.productSolo} deviceType={deviceType} />\n      );\n      // content = (\n      //   <ProductDetails product={data.productSolo} deviceType={deviceType} />\n      // );\n    }\n  }\n\n  return (\n    <>\n      <SEO\n        title={`${data.productSolo.title} - PickBazar`}\n        description={`${data.productSolo.title} Details`}\n      />\n\n      <Modal>\n        <ProductSingleWrapper>\n          <ProductSingleContainer>\n            {content}\n            <CartPopUp deviceType={deviceType} />\n          </ProductSingleContainer>\n        </ProductSingleWrapper>\n      </Modal>\n    </>\n  );\n};\nexport default withApollo(ProductPage);\n"]},"metadata":{},"sourceType":"module"}
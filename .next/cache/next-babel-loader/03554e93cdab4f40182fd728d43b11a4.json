{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { openModal } from '@redq/reuse-modal';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { RightMenu } from './Menu/RightMenu/RightMenu';\nimport { LeftMenu } from './Menu/LeftMenu/LeftMenu';\nimport HeaderWrapper, { DrawerWrapper } from './Header.style';\nimport LogoImage from 'image/logo.svg';\nimport UserImage from 'image/user.jpg'; // import { isCategoryPage } from '../is-home-page';\n\nimport MobileDrawer from './MobileDrawer';\nimport { DrawerProvider } from 'contexts/drawer/drawer.provider';\n\nvar Header = function Header(_ref) {\n  var className = _ref.className;\n\n  var _React$useContext = React.useContext(AuthContext),\n      isAuthenticated = _React$useContext.authState.isAuthenticated,\n      authDispatch = _React$useContext.authDispatch;\n\n  var _React$useContext2 = React.useContext(SearchContext),\n      state = _React$useContext2.state,\n      dispatch = _React$useContext2.dispatch;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname,\n      query = _useRouter.query;\n\n  var handleLogout = function handleLogout() {\n    if (true) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  var handleJoin = function handleJoin() {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  var onSearch = function onSearch(text) {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread(_objectSpread({}, state), {}, {\n        text: text\n      })\n    });\n  };\n\n  var text = state.text;\n\n  var onClickHandler = function onClickHandler() {\n    var updatedQuery = query.category ? {\n      text: text,\n      category: query.category\n    } : {\n      text: text\n    };\n    Router.push({\n      pathname: pathname,\n      query: updatedQuery\n    });\n  }; // const showSearch = isCategoryPage(pathname);\n\n\n  return __jsx(HeaderWrapper, {\n    className: className\n  }, __jsx(DrawerProvider, null, __jsx(DrawerWrapper, null, __jsx(MobileDrawer, null))), __jsx(LeftMenu, {\n    logo: LogoImage\n  }), __jsx(SearchBox, {\n    className: \"headerSearch\",\n    handleSearch: function handleSearch(value) {\n      return onSearch(value);\n    },\n    onClick: onClickHandler,\n    placeholder: \"Search anything...\",\n    hideType: true,\n    minimal: true,\n    showSvg: true,\n    style: {\n      width: '100%'\n    },\n    value: text || ''\n  }), __jsx(RightMenu, {\n    isAuthenticated: isAuthenticated,\n    onJoin: handleJoin,\n    onLogout: handleLogout,\n    avatar: UserImage\n  }));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}
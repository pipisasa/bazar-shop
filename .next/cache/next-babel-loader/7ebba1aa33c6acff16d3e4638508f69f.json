{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { LinkButton, Button, Wrapper, Container, Heading, SubHeading, OfferSection, Offer, Input, Divider } from './SignInOutForm.style';\nimport { Facebook, Google } from 'components/AllSvgIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../../graphql/mutation/user';\nexport default function SignInModal() {\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  const toggleForgotPassForm = () => {\n    authDispatch({\n      type: 'FORGOTPASS'\n    });\n  };\n\n  const [loginMutation] = useMutation(LOGIN_USER);\n\n  const loginCallback = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data: {\n          loginUser: {\n            token\n          }\n        }\n      } = await loginMutation({\n        variables: {\n          email,\n          password\n        }\n      });\n\n      if (!token) {\n        closeModal();\n        return;\n      }\n\n      if (false) {\n        localStorage.setItem('access_token', `Bearer ${token}`);\n        authDispatch({\n          type: 'SIGNIN_SUCCESS'\n        });\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n      return;\n    }\n  };\n\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\"\n  })), __jsx(SubHeading, null, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your email & password\"\n  })), __jsx(\"form\", {\n    onSubmit: loginCallback\n  }, __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address.\"\n  }, placeholder => __jsx(Input, {\n    type: \"email\",\n    placeholder: placeholder,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true\n  })), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\",\n    values: {\n      minCharacter: 6\n    }\n  }, placeholder => __jsx(Input, {\n    type: \"password\",\n    placeholder: placeholder,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true\n  })), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    type: \"submit\",\n    style: {\n      color: '#fff'\n    }\n  })), __jsx(Divider, null, __jsx(\"span\", null, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\"\n  }))), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Facebook',\n    className: \"facebook\",\n    icon: __jsx(Facebook, null),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueFacebookBtn\",\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Google',\n    className: \"google\",\n    icon: __jsx(Google, null),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueGoogleBtn\",\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have any account?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignUpForm\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\"\n  })))), __jsx(OfferSection, null, __jsx(Offer, null, __jsx(FormattedMessage, {\n    id: \"forgotPasswordText\",\n    defaultMessage: \"Forgot your password?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleForgotPassForm\n  }, __jsx(FormattedMessage, {\n    id: \"resetText\",\n    defaultMessage: \"Reset It\"\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}
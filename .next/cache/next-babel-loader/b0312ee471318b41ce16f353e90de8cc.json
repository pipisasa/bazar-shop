{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateContact.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT, CREATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\nvar ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nvar CreateOrUpdateContact = function CreateOrUpdateContact(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    number: item.number || ''\n  };\n\n  var _useMutation = useMutation(item && item.slug ? UPDATE_CONTACT : CREATE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addContactMutation = _useMutation2[0];\n\n  var _useContext = useContext(ProfileContext),\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n      var setSubmitting, _yield$addContactMuta, data, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting;\n              _context.next = 3;\n              return addContactMutation({\n                variables: {\n                  slug: values.slug,\n                  number: values.number,\n                  type: values.type\n                }\n              });\n\n            case 3:\n              _yield$addContactMuta = _context.sent;\n              data = _yield$addContactMuta.data;\n              result = data.createContact ? data.createContact : data.updateContact;\n              dispatch({\n                type: 'ADD_OR_UPDATE_CONTACT',\n                payload: result.contact\n              });\n              closeModal();\n              setSubmitting(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var values = _ref4.values,\n        handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, item && item.id ? 'Edit Contact' : 'Add New Contact'), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(MaskedInput, {\n      mask: [// '(',\n      /[1-9]/, /\\d/, /\\d/, // ')',\n      // ' ',\n      /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d?/, /\\d?/, /\\d?/, /\\d?/, /\\d?/, /\\d?/],\n      className: \"form-control\",\n      placeholder: \"Enter a phone number\",\n      guide: false,\n      id: \"my-input-id\",\n      value: values.number,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      name: \"number\",\n      render: function render(ref, props) {\n        return __jsx(StyledInput, _extends({\n          ref: ref\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: StyledError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      title: \"Save Contact\",\n      size: \"medium\",\n      fullwidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\n_s(CreateOrUpdateContact, \"KK+UfYU3Gx3XgMfIkayDE5B0QHc=\", false, function () {\n  return [useMutation];\n});\n\n_c = CreateOrUpdateContact;\nexport default CreateOrUpdateContact;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"UpdateContact__StyledInput\",\n  componentId: \"sc-1nqsrie-0\"\n})([\"width:100%;height:54px;border-radius:6px;font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:400;padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('colors.fontFamily', 'Lato, sans-serif'), themeGet('colors.borderColor', '#e6e6e6'), themeGet('colors.darkBold', '#0D1136'), themeGet('colors.primary', '#009e7f'), themeGet('colorsdarkRegular', '#77798C'));\n_c2 = StyledInput;\nvar StyledError = styled.div.withConfig({\n  displayName: \"UpdateContact__StyledError\",\n  componentId: \"sc-1nqsrie-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateOrUpdateContact\");\n$RefreshReg$(_c2, \"StyledInput\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateContact.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","MaskedInput","ProfileContext","Button","UPDATE_CONTACT","CREATE_CONTACT","FieldWrapper","Heading","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","initialValues","id","slug","type","addContactMutation","dispatch","handleSubmit","values","setSubmitting","variables","data","result","createContact","updateContact","payload","contact","handleChange","handleBlur","isSubmitting","ref","props","StyledError","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT, CREATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\n\ntype Props = {\n  item?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: number | null;\n  slug: string;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required'),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n  const initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    number: item.number || '',\n  };\n  const [addContactMutation] = useMutation((item && item.slug) ?  UPDATE_CONTACT : CREATE_CONTACT);\n  const { \n    // state, \n  dispatch } = useContext(ProfileContext);\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\n    const {data} =  await addContactMutation({\n      variables: {\n        slug: values.slug,\n        number: values.number,\n        type: values.type\n      },\n    });\n    const result = data.createContact ? data.createContact : data.updateContact;\n    dispatch({ type: 'ADD_OR_UPDATE_CONTACT', payload: result.contact});\n    closeModal();\n    setSubmitting(false);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {item && item.id ? 'Edit Contact' : 'Add New Contact'}\n          </Heading>\n          <FieldWrapper>\n            <MaskedInput\n              mask={[\n                // '(',\n                /[1-9]/,\n                /\\d/,\n                /\\d/,\n                // ')',\n                // ' ',\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n                /\\d?/,\n              ]}\n              className='form-control'\n              placeholder='Enter a phone number'\n              guide={false}\n              id='my-input-id'\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='number'\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            />\n          </FieldWrapper>\n          <ErrorMessage name='number' component={StyledError} />\n\n          <Button\n            disabled={isSubmitting}\n            type='submit'\n            title='Save Contact'\n            size='medium'\n            fullwidth={true}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 6px;\n  font-family: ${themeGet('colors.fontFamily', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.borderColor', '#e6e6e6')};\n  color: ${themeGet('colors.darkBold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: 400;\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colorsdarkRegular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}
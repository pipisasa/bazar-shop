{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/shop/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\nimport { AuthProvider } from 'contexts/auth/auth.provider';\nimport { StickyProvider } from 'contexts/app/app.provider';\nimport { SearchProvider } from 'contexts/search/search.provider';\nimport { HeaderProvider } from 'contexts/header/header.provider';\nimport { LanguageProvider } from 'contexts/language/language.provider';\nimport AppLayout from 'containers/LayoutContainer/AppLayout';\nimport { useDeviceType } from 'helper/useDeviceType';\nimport { CartProvider } from 'contexts/cart/use-cart'; // Language translation files\n\nimport localEn from 'data/translation/en.json';\nimport localAr from 'data/translation/ar.json';\nimport localEs from 'data/translation/es.json';\nimport localDe from 'data/translation/de.json';\nimport localCn from 'data/translation/zh.json';\nimport localIl from 'data/translation/he.json'; // External CSS import here\n\nimport 'rc-drawer/assets/index.css';\nimport 'rc-table/assets/index.css';\nimport 'rc-collapse/assets/index.css';\nimport 'react-multi-carousel/lib/styles.css';\nimport 'components/MultiCarousel/MultiCarousel.style.css';\nimport '@redq/reuse-modal/lib/index.css';\nimport { GlobalStyle } from 'styled/global.style';\nimport { parseCookies } from 'helper/parse-cookies';\nimport { getLocalState, setLocalState } from 'helper/localStorage';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag'; // Language translation Config\n\nconst messages = {\n  en: localEn,\n  ar: localAr,\n  es: localEs,\n  de: localDe,\n  zh: localCn,\n  he: localIl\n}; // need to provide types\n\nexport default function ExtendedApp({\n  Component,\n  pageProps,\n  userAgent,\n  locale,\n  query\n}) {\n  const [refreshMutation] = useMutation(gql`\n    mutation($refresh: String!){\n      refreshToken(\n        token: $refresh\n      ){\n        token\n      }\n    }\n  `);\n  setInterval(async () => {\n    try {\n      var _getLocalState;\n\n      const refresh = ((_getLocalState = getLocalState('access_token')) === null || _getLocalState === void 0 ? void 0 : _getLocalState.token) || \"\";\n      const {\n        data: {\n          token\n        }\n      } = await refreshMutation({\n        variables: {\n          refresh\n        }\n      });\n      setLocalState('access_token', JSON.stringify({\n        token\n      }));\n    } catch (e) {}\n  }, 1000 * 60 * 5);\n  const deviceType = useDeviceType(userAgent);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(LanguageProvider, {\n    messages: messages,\n    initLocale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(CartProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(SearchProvider, {\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(HeaderProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(StickyProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(React.Fragment, null, __jsx(AppLayout, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }))), __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })))))))));\n}\n\nExtendedApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    req,\n    query\n  } = appContext.ctx;\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  const {\n    locale\n  } = parseCookies(req);\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    userAgent,\n    query,\n    locale\n  });\n};","map":{"version":3,"sources":["/Users/pipi/Documents/pr/shop/pages/_app.tsx"],"names":["React","App","ThemeProvider","theme","AuthProvider","StickyProvider","SearchProvider","HeaderProvider","LanguageProvider","AppLayout","useDeviceType","CartProvider","localEn","localAr","localEs","localDe","localCn","localIl","GlobalStyle","parseCookies","getLocalState","setLocalState","useMutation","gql","messages","en","ar","es","de","zh","he","ExtendedApp","Component","pageProps","userAgent","locale","query","refreshMutation","setInterval","refresh","token","data","variables","JSON","stringify","e","deviceType","getInitialProps","appContext","appProps","req","ctx","headers","navigator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\nimport { AuthProvider } from 'contexts/auth/auth.provider';\nimport { StickyProvider } from 'contexts/app/app.provider';\nimport { SearchProvider } from 'contexts/search/search.provider';\nimport { HeaderProvider } from 'contexts/header/header.provider';\nimport { LanguageProvider } from 'contexts/language/language.provider';\n\nimport AppLayout from 'containers/LayoutContainer/AppLayout';\nimport { useDeviceType } from 'helper/useDeviceType';\nimport { CartProvider } from 'contexts/cart/use-cart';\n// Language translation files\nimport localEn from 'data/translation/en.json';\nimport localAr from 'data/translation/ar.json';\nimport localEs from 'data/translation/es.json';\nimport localDe from 'data/translation/de.json';\nimport localCn from 'data/translation/zh.json';\nimport localIl from 'data/translation/he.json';\n\n// External CSS import here\nimport 'rc-drawer/assets/index.css';\nimport 'rc-table/assets/index.css';\nimport 'rc-collapse/assets/index.css';\nimport 'react-multi-carousel/lib/styles.css';\nimport 'components/MultiCarousel/MultiCarousel.style.css';\nimport '@redq/reuse-modal/lib/index.css';\nimport { GlobalStyle } from 'styled/global.style';\nimport { parseCookies } from 'helper/parse-cookies';\nimport { getLocalState, setLocalState } from 'helper/localStorage';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\n// Language translation Config\nconst messages = {\n  en: localEn,\n  ar: localAr,\n  es: localEs,\n  de: localDe,\n  zh: localCn,\n  he: localIl,\n};\n// need to provide types\nexport default function ExtendedApp({\n  Component,\n  pageProps,\n  userAgent,\n  locale,\n  query,\n}) {\n\n  const [refreshMutation] = useMutation(gql`\n    mutation($refresh: String!){\n      refreshToken(\n        token: $refresh\n      ){\n        token\n      }\n    }\n  `);\n\n  setInterval((async ()=>{\n    try {\n      const refresh = getLocalState('access_token')?.token || \"\";\n      const {data:{token}} = await refreshMutation({\n        variables:{refresh}\n      })\n      setLocalState('access_token', JSON.stringify({token}))\n    } catch (e){}\n  }),1000*60*5)\n  const deviceType = useDeviceType(userAgent);\n  return (\n    <ThemeProvider theme={theme}>\n      <LanguageProvider messages={messages} initLocale={locale}>\n        <CartProvider>\n          <SearchProvider query={query}>\n            <HeaderProvider>\n              <StickyProvider>\n                <AuthProvider>\n                  <>\n                    <AppLayout deviceType={deviceType}>\n                      <Component {...pageProps} deviceType={deviceType} />\n                    </AppLayout>\n                    <GlobalStyle />\n                  </>\n                </AuthProvider>\n              </StickyProvider>\n            </HeaderProvider>\n          </SearchProvider>\n        </CartProvider>\n      </LanguageProvider>\n    </ThemeProvider>\n  );\n}\n\nExtendedApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext);\n  const { req, query } = appContext.ctx;\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  const { locale } = parseCookies(req);\n  return { ...appProps, userAgent, query, locale };\n};\n"]},"metadata":{},"sourceType":"module"}
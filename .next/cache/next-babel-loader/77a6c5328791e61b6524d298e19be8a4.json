{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Box, SelectedItem, Flag, MenuItem } from './LanguageSwitcher.style';\nimport Popover from 'components/Popover/Popover';\nimport { FormattedMessage } from 'react-intl';\nimport { DEFlag, CNFlag, USFlag, ILFlag, ESFlag, SAFlag } from 'components/AllSvgIcon';\nimport { useLocale } from 'contexts/language/language.provider';\nconst LANGUAGES = [{\n  id: 'ar',\n  label: 'Arabic',\n  intlLangName: 'intlArabic',\n  icon: __jsx(SAFlag, null)\n}, {\n  id: 'zh',\n  label: 'Chinese',\n  intlLangName: 'intlChinese',\n  icon: __jsx(CNFlag, null)\n}, {\n  id: 'en',\n  label: 'English',\n  intlLangName: 'intlEnglish',\n  icon: __jsx(USFlag, null)\n}, {\n  id: 'de',\n  label: 'German',\n  intlLangName: 'intlGerman',\n  icon: __jsx(DEFlag, null)\n}, {\n  id: 'he',\n  label: 'Hebrew',\n  intlLangName: 'intlHebrew',\n  icon: __jsx(ILFlag, null)\n}, {\n  id: 'es',\n  label: 'Spanish',\n  intlLangName: 'intlSpanish',\n  icon: __jsx(ESFlag, null)\n}];\n\nconst LanguageMenu = ({\n  onClick\n}) => {\n  return __jsx(React.Fragment, null, LANGUAGES.map(item => __jsx(MenuItem, {\n    onClick: onClick,\n    key: item.id,\n    value: item.id\n  }, __jsx(\"span\", null, item.icon), __jsx(FormattedMessage, {\n    id: item.intlLangName,\n    defaultMessage: item.label\n  }))));\n};\n\nconst LanguageSwitcher = () => {\n  const {\n    locale,\n    changeLanguage\n  } = useLocale();\n  const selectedLanguage = LANGUAGES.find(x => x.id === locale);\n\n  const languageChangeHandler = e => {\n    changeLanguage(e.target.value);\n  };\n\n  return __jsx(Box, null, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedItem, null, __jsx(Flag, null, selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.icon), __jsx(\"span\", null, __jsx(FormattedMessage, {\n      id: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.intlLangName,\n      defaultMessage: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.label\n    }))),\n    content: __jsx(LanguageMenu, {\n      onClick: languageChangeHandler\n    })\n  }));\n};\n\nexport default LanguageSwitcher;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport { ProductDetailsWrapper, ProductPreview, ProductInfo, ProductTitlePriceWrapper, ProductTitle, BackButton, ProductWeight, ProductDescription, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, RelatedItems } from './ProductDetails.style';\nimport { LongArrowLeft, CartIcon } from 'components/AllSvgIcon';\nimport ReadMore from 'components/Truncate/Truncate';\nimport CarouselWithCustomDots from 'components/MultiCarousel/MultiCarousel';\nimport Products from 'containers/Products/Products';\nimport { CURRENCY } from 'helper/constant';\nimport { FormattedMessage } from 'react-intl';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/Counter/Counter';\n\nvar ProductDetails = function ProductDetails(_ref) {\n  var product = _ref.product,\n      deviceType = _ref.deviceType;\n\n  var _useLocale = useLocale(),\n      isRtl = _useLocale.isRtl;\n\n  var _useCart = useCart(),\n      addItem = _useCart.addItem,\n      removeItem = _useCart.removeItem,\n      isInCart = _useCart.isInCart,\n      getItem = _useCart.getItem,\n      items = _useCart.items;\n\n  var data = product;\n\n  var handleAddClick = function handleAddClick(e) {\n    e.stopPropagation();\n    addItem(data);\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      window.scrollTo(0, 0);\n    }, 500);\n  }, []);\n  var galleryImgs = [].concat(_toConsumableArray(product.images), [{\n    image: product.image\n  }]);\n  console.log(product.category);\n  return __jsx(React.Fragment, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\",\n    dir: \"ltr\"\n  }, !isRtl && __jsx(ProductPreview, null, __jsx(BackButton, null, __jsx(Button, {\n    title: \"Back\",\n    intlButtonId: \"backBtn\",\n    iconPosition: \"left\",\n    size: \"small\",\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#77798c'\n    },\n    icon: __jsx(LongArrowLeft, null),\n    onClick: Router.back\n  })), __jsx(CarouselWithCustomDots, {\n    items: galleryImgs,\n    deviceType: deviceType\n  })), __jsx(ProductInfo, {\n    dir: isRtl ? 'rtl' : 'ltr'\n  }, __jsx(ProductTitlePriceWrapper, null, __jsx(ProductTitle, null, product.title), __jsx(ProductPriceWrapper, null, product.discountPercent ? __jsx(SalePrice, null, CURRENCY, product.price) : '', __jsx(ProductPrice, null, CURRENCY, product.salePrice ? product.salePrice : product.price))), __jsx(ProductWeight, null, product.unit), __jsx(ProductDescription, null, __jsx(ReadMore, {\n    character: 600\n  }, product.description)), __jsx(ProductCartWrapper, null, __jsx(ProductCartBtn, null, !isInCart(data.id) ? __jsx(Button, {\n    title: \"Add to Cart\",\n    intlButtonId: \"addToCartButton\",\n    iconPosition: \"left\",\n    size: \"small\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: handleAddClick\n  }) : __jsx(Counter, {\n    value: getItem(data.id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick\n  }))), __jsx(ProductMeta, null, __jsx(MetaSingle, null, product.category && __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/\".concat(product.Type.toLowerCase(), \"?category=\").concat(product.category.slug),\n    key: \"link-\".concat(product.category.id)\n  }, __jsx(\"a\", null, __jsx(MetaItem, null, product.category.title))), product.category.parent && __jsx(Link, {\n    href: \"/\".concat(product.Type.toLowerCase(), \"?category=\").concat(product.category.parent.slug),\n    key: \"link-\".concat(product.category.parent.id)\n  }, __jsx(\"a\", null, __jsx(MetaItem, null, product.category.parent.title))))))), isRtl && __jsx(ProductPreview, null, __jsx(BackButton, null, __jsx(Button, {\n    title: \"Back\",\n    intlButtonId: \"backBtn\",\n    iconPosition: \"left\",\n    size: \"small\",\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#77798c'\n    },\n    icon: __jsx(LongArrowLeft, null),\n    onClick: Router.back\n  })), __jsx(CarouselWithCustomDots, {\n    items: galleryImgs,\n    deviceType: deviceType\n  }))), __jsx(RelatedItems, null, __jsx(\"h2\", null, __jsx(FormattedMessage, {\n    id: \"intlReletedItems\",\n    defaultMessage: \"Related Items\"\n  })), __jsx(Products, {\n    type: product.Type.toLowerCase(),\n    deviceType: deviceType,\n    loadMore: false,\n    fetchLimit: 10\n  })));\n};\n\nexport default ProductDetails;","map":null,"metadata":{},"sourceType":"module"}
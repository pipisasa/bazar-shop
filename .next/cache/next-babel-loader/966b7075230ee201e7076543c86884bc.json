{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/shop/containers/Checkout/Checkout.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport Loader from 'components/Loader/Loader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport StripePaymentForm from '../Payment/StripePaymentForm';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport CheckoutWrapper, { CheckoutContainer, OrderSummary, OrderSummaryItem, OrderLabel, OrderAmount, DeliverySchedule, Heading, DeliveryAddress, ButtonGroup, Contact, PaymentOption, CheckoutSubmit, CouponBoxWrapper, ErrorMsg } from './Checkout.style';\nimport CouponBox, { CouponDisplay } from 'components/CouponBox/CouponBox';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { APPLY_COUPON } from 'graphql/mutation/coupon'; // The type of props Checkout Form receives\n\nconst Checkout = ({\n  token,\n  deviceType\n}) => {\n  const {\n    removeCoupon,\n    coupon,\n    applyCoupon,\n    clearCart,\n    cartItemsCount,\n    calculatePrice,\n    calculateDiscount,\n    calculateSubTotalPrice\n  } = useCart();\n  const {\n    0: couponCode,\n    1: setCouponCode\n  } = useState('');\n  const {\n    0: couponError,\n    1: setError\n  } = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const {\n    address,\n    contact,\n    card,\n    schedules\n  } = state;\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [appliedCoupon] = useMutation(APPLY_COUPON);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n\n    if (isValid) {\n      clearCart();\n      Router.push('/order-received');\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (calculatePrice() > 0 && cartItemsCount > 0 && address.length && contact.length && card.length && schedules.length) {\n      setIsValid(true);\n    }\n  }, [state]); // Add or edit modal\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({\n            type: 'DELETE_CARD',\n            payload: item.id\n          });\n          return await deletePaymentCardMutation({\n            variables: {\n              cardId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'contact':\n          dispatch({\n            type: 'DELETE_CONTACT',\n            payload: item.id\n          });\n          return await deleteContactMutation({\n            variables: {\n              contactId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'address':\n          dispatch({\n            type: 'DELETE_ADDRESS',\n            payload: item.id\n          });\n          return await deleteAddressMutation({\n            variables: {\n              addressId: JSON.stringify(item.id)\n            }\n          });\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n    const {\n      data\n    } = await appliedCoupon({\n      variables: {\n        code: couponCode\n      }\n    });\n\n    if (data.applyCoupon && data.applyCoupon.discountInPercent) {\n      applyCoupon(data.applyCoupon);\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n\n  const handleOnUpdate = couponCode => {\n    setCouponCode(couponCode);\n  };\n\n  return __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, __jsx(CheckoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, __jsx(CheckoutContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(OrderSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, __jsx(OrderLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Subtotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), \" (\", cartItemsCount, ' ', __jsx(FormattedMessage, {\n    id: \"itemsText\",\n    defaultMessage: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), \")\"), __jsx(OrderAmount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"$ \", calculateSubTotalPrice())), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(OrderLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"shippinFeeText\",\n    defaultMessage: \"Shipping Fee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  })), __jsx(OrderAmount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"$ 00\")), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    className: \"voucherWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, __jsx(OrderLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"voucherText\",\n    defaultMessage: \"Voucher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })), coupon ? __jsx(CouponDisplay, {\n    code: coupon.code,\n    sign: \"-\",\n    currency: \"$\",\n    price: calculateDiscount(),\n    onClick: e => {\n      e.preventDefault();\n      removeCoupon();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }) : __jsx(React.Fragment, null, __jsx(CouponBoxWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, __jsx(CouponBox, {\n    buttonTitle: \"Apply\",\n    intlCouponBoxPlaceholder: \"couponPlaceholder\",\n    onClick: handleApplyCoupon,\n    value: couponCode,\n    onUpdate: handleOnUpdate,\n    style: {\n      maxWidth: 350,\n      height: 50\n    },\n    intlCouponApplyButton: \"voucherApply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }), couponError && __jsx(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"couponError\",\n    defaultMessage: couponError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }))))), __jsx(OrderSummaryItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, __jsx(OrderLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  })), __jsx(OrderAmount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"$ \", calculatePrice()))), __jsx(DeliverySchedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliverySchedule\",\n    defaultMessage: \"Select Your Delivery Schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  })), __jsx(RadioGroup, {\n    items: schedules,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.title,\n      content: item.time_slot,\n      name: \"schedule\",\n      checked: item.type === 'primary',\n      withActionButtons: false,\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_SCHEDULE',\n        payload: item.id.toString()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), __jsx(DeliveryAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    items: address,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.name,\n      content: item.info,\n      name: \"address\",\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_ADDRESS',\n        payload: item.id.toString()\n      }),\n      onEdit: () => handleEditDelete(item, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Address\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addAddressBtn\",\n      onClick: () => handleModal(UpdateAddress, 'add-address-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }))), __jsx(Contact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  })), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    items: contact,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.type,\n      content: item.number,\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_CONTACT',\n        payload: item.id.toString()\n      }),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, 'delete', 'contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Contact\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addContactBtn\",\n      onClick: () => handleModal(UpdateContact, 'add-contact-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }))), __jsx(PaymentOption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"selectPaymentText\",\n    defaultMessage: \"Select Payment Option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  })), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: card,\n    onEditDeleteField: (item, type) => handleEditDelete(item, type, 'payment'),\n    onChange: item => dispatch({\n      type: 'SET_PRIMARY_CARD',\n      payload: item.id.toString()\n    }),\n    handleAddNewCard: () => {\n      handleModal(StripePaymentForm, {\n        totalPrice: calculatePrice()\n      }, 'add-address-modal stripe-modal');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  })), __jsx(CheckoutSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"button\",\n    disabled: !isValid,\n    title: \"Proceed to Checkout\" // size='small'\n    ,\n    intlButtonId: \"proceesCheckout\",\n    loader: __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 23\n      }\n    }),\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/pipi/Documents/pr/shop/containers/Checkout/Checkout.tsx"],"names":["React","useContext","useState","useEffect","Router","Button","RadioCard","RadioGroup","PaymentGroup","Loader","UpdateAddress","UpdateContact","StripePaymentForm","DELETE_ADDRESS","DELETE_CARD","DELETE_CONTACT","openModal","useMutation","CheckoutWrapper","CheckoutContainer","OrderSummary","OrderSummaryItem","OrderLabel","OrderAmount","DeliverySchedule","Heading","DeliveryAddress","ButtonGroup","Contact","PaymentOption","CheckoutSubmit","CouponBoxWrapper","ErrorMsg","CouponBox","CouponDisplay","ProfileContext","FormattedMessage","useCart","APPLY_COUPON","Checkout","token","deviceType","removeCoupon","coupon","applyCoupon","clearCart","cartItemsCount","calculatePrice","calculateDiscount","calculateSubTotalPrice","couponCode","setCouponCode","couponError","setError","state","dispatch","loading","setLoading","isValid","setIsValid","address","contact","card","schedules","deleteContactMutation","deleteAddressMutation","deletePaymentCardMutation","appliedCoupon","handleSubmit","push","length","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","type","name","payload","id","variables","cardId","JSON","stringify","contactId","addressId","handleApplyCoupon","data","code","discountInPercent","handleOnUpdate","marginBottom","e","preventDefault","maxWidth","title","time_slot","toString","info","number","totalPrice"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport Loader from 'components/Loader/Loader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport StripePaymentForm from '../Payment/StripePaymentForm';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport CheckoutWrapper, {\n  CheckoutContainer,\n  OrderSummary,\n  OrderSummaryItem,\n  OrderLabel,\n  OrderAmount,\n  DeliverySchedule,\n  Heading,\n  DeliveryAddress,\n  ButtonGroup,\n  Contact,\n  PaymentOption,\n  CheckoutSubmit,\n  CouponBoxWrapper,\n  ErrorMsg,\n} from './Checkout.style';\n\nimport CouponBox, { CouponDisplay } from 'components/CouponBox/CouponBox';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { APPLY_COUPON } from 'graphql/mutation/coupon';\n\n// The type of props Checkout Form receives\ninterface MyFormProps {\n  token: string;\n  deviceType: any;\n}\n\nconst Checkout: React.FC<MyFormProps> = ({ token, deviceType }) => {\n  const {\n    removeCoupon,\n    coupon,\n    applyCoupon,\n    clearCart,\n    cartItemsCount,\n    calculatePrice,\n    calculateDiscount,\n    calculateSubTotalPrice,\n  } = useCart();\n  const [couponCode, setCouponCode] = useState('');\n  const [couponError, setError] = useState('');\n  const { state, dispatch } = useContext(ProfileContext);\n  const [loading, setLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const { address, contact, card, schedules } = state;\n\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [appliedCoupon] = useMutation(APPLY_COUPON);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    if (isValid) {\n      clearCart();\n      Router.push('/order-received');\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (\n      calculatePrice() > 0 &&\n      cartItemsCount > 0 &&\n      address.length &&\n      contact.length &&\n      card.length &&\n      schedules.length\n    ) {\n      setIsValid(true);\n    }\n  }, [state]);\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n\n          return await deleteContactMutation({\n            variables: { contactId: JSON.stringify(item.id) },\n          });\n        case 'address':\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n\n          return await deleteAddressMutation({\n            variables: { addressId: JSON.stringify(item.id) },\n          });\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n    const { data }: any = await appliedCoupon({\n      variables: { code: couponCode },\n    });\n    if (data.applyCoupon && data.applyCoupon.discountInPercent) {\n      applyCoupon(data.applyCoupon);\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n  const handleOnUpdate = (couponCode: any) => {\n    setCouponCode(couponCode);\n  };\n\n  return (\n    <form>\n      <CheckoutWrapper>\n        <CheckoutContainer>\n          <OrderSummary>\n            <OrderSummaryItem style={{ marginBottom: 15 }}>\n              <OrderLabel>\n                <FormattedMessage id='subTotal' defaultMessage='Subtotal' /> (\n                {cartItemsCount}{' '}\n                <FormattedMessage id='itemsText' defaultMessage='items' />)\n              </OrderLabel>\n              <OrderAmount>$ {calculateSubTotalPrice()}</OrderAmount>\n            </OrderSummaryItem>\n\n            <OrderSummaryItem style={{ marginBottom: 30 }}>\n              <OrderLabel>\n                <FormattedMessage\n                  id='shippinFeeText'\n                  defaultMessage='Shipping Fee'\n                />\n              </OrderLabel>\n              <OrderAmount>$ 00</OrderAmount>\n            </OrderSummaryItem>\n\n            <OrderSummaryItem\n              style={{ marginBottom: 30 }}\n              className='voucherWrapper'\n            >\n              <OrderLabel>\n                <FormattedMessage id='voucherText' defaultMessage='Voucher' />\n              </OrderLabel>\n              {coupon ? (\n                <CouponDisplay\n                  code={coupon.code}\n                  sign='-'\n                  currency='$'\n                  price={calculateDiscount()}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    removeCoupon();\n                  }}\n                />\n              ) : (\n                <>\n                  <CouponBoxWrapper>\n                    <CouponBox\n                      buttonTitle='Apply'\n                      intlCouponBoxPlaceholder='couponPlaceholder'\n                      onClick={handleApplyCoupon}\n                      value={couponCode}\n                      onUpdate={handleOnUpdate}\n                      style={{ maxWidth: 350, height: 50 }}\n                      intlCouponApplyButton='voucherApply'\n                    />\n                    {couponError && (\n                      <ErrorMsg>\n                        <FormattedMessage\n                          id='couponError'\n                          defaultMessage={couponError}\n                        />\n                      </ErrorMsg>\n                    )}\n                  </CouponBoxWrapper>\n                </>\n              )}\n            </OrderSummaryItem>\n\n            <OrderSummaryItem>\n              <OrderLabel>\n                <FormattedMessage id='totalText' defaultMessage='Total' />\n              </OrderLabel>\n              <OrderAmount>$ {calculatePrice()}</OrderAmount>\n            </OrderSummaryItem>\n          </OrderSummary>\n          {/* DeliverySchedule */}\n          <DeliverySchedule>\n            <Heading>\n              <FormattedMessage\n                id='deliverySchedule'\n                defaultMessage='Select Your Delivery Schedule'\n              />\n            </Heading>\n            <RadioGroup\n              items={schedules}\n              component={(item: any) => (\n                <RadioCard\n                  id={item.id}\n                  key={item.id}\n                  title={item.title}\n                  content={item.time_slot}\n                  name='schedule'\n                  checked={item.type === 'primary'}\n                  withActionButtons={false}\n                  onChange={() =>\n                    dispatch({\n                      type: 'SET_PRIMARY_SCHEDULE',\n                      payload: item.id.toString(),\n                    })\n                  }\n                />\n              )}\n            />\n          </DeliverySchedule>\n          {/* DeliveryAddress */}\n          <DeliveryAddress>\n            <Heading>\n              <FormattedMessage\n                id='checkoutDeliveryAddress'\n                defaultMessage='Select Your Delivery Address'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={address}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.name}\n                    content={item.info}\n                    name='address'\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_ADDRESS',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    onEdit={() => handleEditDelete(item, 'edit', 'address')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'address')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    title='Add Address'\n                    iconPosition='right'\n                    colors='primary'\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    intlButtonId='addAddressBtn'\n                    onClick={() =>\n                      handleModal(UpdateAddress, 'add-address-modal')\n                    }\n                  />\n                }\n              />\n            </ButtonGroup>\n          </DeliveryAddress>\n          {/* Contact number */}\n          <Contact>\n            <Heading>\n              <FormattedMessage\n                id='contactNumberText'\n                defaultMessage='Select Your Contact Number'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={contact}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.type}\n                    content={item.number}\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_CONTACT',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    name='contact'\n                    onEdit={() => handleEditDelete(item, 'edit', 'contact')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'contact')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    title='Add Contact'\n                    iconPosition='right'\n                    colors='primary'\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    intlButtonId='addContactBtn'\n                    onClick={() =>\n                      handleModal(UpdateContact, 'add-contact-modal')\n                    }\n                  />\n                }\n              />\n            </ButtonGroup>\n          </Contact>\n          {/* PaymentOption */}\n          <PaymentOption>\n            <Heading>\n              <FormattedMessage\n                id='selectPaymentText'\n                defaultMessage='Select Payment Option'\n              />\n            </Heading>\n            <PaymentGroup\n              name='payment'\n              deviceType={deviceType}\n              items={card}\n              onEditDeleteField={(item: any, type: string) =>\n                handleEditDelete(item, type, 'payment')\n              }\n              onChange={(item: any) =>\n                dispatch({\n                  type: 'SET_PRIMARY_CARD',\n                  payload: item.id.toString(),\n                })\n              }\n              handleAddNewCard={() => {\n                handleModal(\n                  StripePaymentForm,\n                  { totalPrice: calculatePrice() },\n                  'add-address-modal stripe-modal'\n                );\n              }}\n            />\n          </PaymentOption>\n          {/* CheckoutSubmit */}\n          <CheckoutSubmit>\n            <Button\n              onClick={handleSubmit}\n              type='button'\n              disabled={!isValid}\n              title='Proceed to Checkout'\n              // size='small'\n              intlButtonId='proceesCheckout'\n              loader={<Loader />}\n              isLoading={loading}\n            />\n          </CheckoutSubmit>\n        </CheckoutContainer>\n      </CheckoutWrapper>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pipi/Documents/pr/shop/pages/product/[slug].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SEO } from 'components/seo';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetails from 'containers/ProductDetails/ProductDetails';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, { ProductSingleContainer } from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\n\nvar ProductPage = function ProductPage(_ref) {\n  _s();\n\n  var deviceType = _ref.deviceType;\n\n  var _useRouter = useRouter(),\n      slug = _useRouter.query.slug;\n\n  var _useQuery = useQuery(GET_PRODUCT_DETAILS, {\n    variables: {\n      slug: slug\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", {\n    style: {\n      padding: \"150px 0 0 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  var content;\n\n  switch (data.productSolo.Type) {\n    case 'BOOK':\n      {\n        content = __jsx(ProductDetailsBook, {\n          product: data.productSolo,\n          deviceType: deviceType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        });\n        break;\n      }\n\n    default:\n      {\n        content = __jsx(ProductDetails, {\n          product: data.productSolo,\n          deviceType: deviceType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        });\n      }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"\".concat(data.productSolo.title, \" - PickBazar\"),\n    description: \"\".concat(data.productSolo.title, \" Details\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(ProductSingleWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(ProductSingleContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, content, __jsx(CartPopUp, {\n    deviceType: deviceType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(ProductPage, \"k8+Zq4OvO4KXcke86jwONTiLAIo=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = ProductPage;\nexport default _c2 = withApollo(ProductPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/shop/pages/product/[slug].tsx"],"names":["React","SEO","useRouter","useQuery","ProductDetails","ProductDetailsBook","Modal","ProductSingleWrapper","ProductSingleContainer","CartPopUp","withApollo","GET_PRODUCT_DETAILS","ProductPage","deviceType","slug","query","variables","data","error","loading","console","log","padding","message","content","productSolo","Type","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,kBAAP,MAA+B,kDAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,oBAAP,IACEC,sBADF,QAEO,6BAFP;AAGA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,mBAAT,QAAoC,6BAApC;;AAUA,IAAMC,WAA4B,GAAG,SAA/BA,WAA+B,OAAoB;AAAA;;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,mBAGnDX,SAAS,EAH0C;AAAA,MAE5CY,IAF4C,cAErDC,KAFqD,CAE5CD,IAF4C;;AAAA,kBAKtBX,QAAQ,CAACQ,mBAAD,EAAsB;AAC7DK,IAAAA,SAAS,EAAE;AAAEF,MAAAA,IAAI,EAAJA;AAAF;AADkD,GAAtB,CALc;AAAA,MAK/CG,IAL+C,aAK/CA,IAL+C;AAAA,MAKzCC,KALyC,aAKzCA,KALyC;AAAA,MAKlCC,OALkC,aAKlCA,OALkC;;AAQvDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,MAAIE,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAID,KAAJ,EAAW,OAAO;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6CJ,KAAK,CAACK,OAAnD,CAAP;AAEX,MAAIC,OAAJ;;AACA,UAAQP,IAAI,CAACQ,WAAL,CAAiBC,IAAzB;AACE,SAAK,MAAL;AAAa;AACXF,QAAAA,OAAO,GACL,MAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEP,IAAI,CAACQ,WAAlC;AAA+C,UAAA,UAAU,EAAEZ,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGA;AACD;;AACD;AAAS;AACPW,QAAAA,OAAO,GACL,MAAC,cAAD;AAAgB,UAAA,OAAO,EAAEP,IAAI,CAACQ,WAA9B;AAA2C,UAAA,UAAU,EAAEZ,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAXH;;AAcA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,KAAK,YAAKI,IAAI,CAACQ,WAAL,CAAiBE,KAAtB,iBADP;AAEE,IAAA,WAAW,YAAKV,IAAI,CAACQ,WAAL,CAAiBE,KAAtB,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OADH,EAEE,MAAC,SAAD;AAAW,IAAA,UAAU,EAAEX,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CANF,CADF;AAiBD,CAhDD;;GAAMD,W;UAGAV,S,EAE6BC,Q;;;KAL7BS,W;AAiDN,qBAAeF,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { SEO } from 'components/seo';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetails from 'containers/ProductDetails/ProductDetails';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, {\n  ProductSingleContainer,\n} from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\n\ntype Props = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst ProductPage: NextPage<Props> = ({ deviceType }) => {\n  const {\n    query: { slug },\n  } = useRouter();\n\n  const { data, error, loading } = useQuery(GET_PRODUCT_DETAILS, {\n    variables: { slug },\n  });\n  console.log(data)\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  if (error) return <div style={{padding:\"150px 0 0 0\"}}>Error: {error.message}</div>;\n\n  let content:any;\n  switch (data.productSolo.Type) {\n    case 'BOOK': {\n      content = (\n        <ProductDetailsBook product={data.productSolo} deviceType={deviceType} />\n      );\n      break;\n    }\n    default: {\n      content = (\n        <ProductDetails product={data.productSolo} deviceType={deviceType} />\n      );\n    }\n  }\n\n  return (\n    <>\n      <SEO\n        title={`${data.productSolo.title} - PickBazar`}\n        description={`${data.productSolo.title} Details`}\n      />\n\n      <Modal>\n        <ProductSingleWrapper>\n          <ProductSingleContainer>\n            {content}\n            <CartPopUp deviceType={deviceType} />\n          </ProductSingleContainer>\n        </ProductSingleWrapper>\n      </Modal>\n    </>\n  );\n};\nexport default withApollo(ProductPage);\n"]},"metadata":{},"sourceType":"module"}
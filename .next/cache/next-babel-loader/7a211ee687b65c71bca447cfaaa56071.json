{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react'; // import uuidV4 from 'uuid/v4';\n\nimport schedules from 'containers/Checkout/data';\nimport { ProfileContext } from './profile.context';\n\nfunction reducer(state, action) {\n  // console.log(action)\n  switch (action.type) {\n    case 'UPDATE_ME_INFO':\n      return _objectSpread(_objectSpread({}, action.payload), {}, {\n        schedules: schedules\n      });\n\n    case 'HANDLE_ON_INPUT_CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.payload.field, action.payload.value));\n\n    case 'ADD_OR_UPDATE_CONTACT':\n      if (action.payload.updateContact) {\n        var contact = action.payload.updateContact.contact;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contacts: state.contacts.map(function (item) {\n            return item.id === contact.id ? _objectSpread(_objectSpread({}, item), contact) : item;\n          })\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: [].concat(_toConsumableArray(state.contacts), [action.payload.createContact.contact])\n      });\n\n    case 'DELETE_CONTACT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: state.contacts.filter(function (item) {\n          return item.id !== action.payload;\n        })\n      });\n\n    case 'ADD_OR_UPDATE_ADDRESS':\n      if (action.payload.updateAddress) {\n        var address = action.payload.updateAddress.address;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          address: state.address.map(function (item) {\n            return item.id === address.id ? _objectSpread(_objectSpread({}, item), address) : item;\n          })\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: [].concat(_toConsumableArray(state.address), [action.payload.createAddress.address])\n      });\n\n    case 'DELETE_ADDRESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: state.address.filter(function (item) {\n          return item.id !== action.payload;\n        })\n      });\n\n    case 'ADD_CARD':\n      var newCard = {\n        id: action.payload.id,\n        Type: state.cards.length === '0' ? 'primary' : 'secondary',\n        cardType: action.payload.brand.toLowerCase(),\n        firstName: state.firstName,\n        lastName: state.lastName,\n        lastFourDigit: action.payload.last4\n      };\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: [newCard].concat(_toConsumableArray(state.cards))\n      });\n\n    case 'DELETE_CARD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: state.cards.filter(function (item) {\n          return item.id !== action.payload;\n        })\n      });\n\n    case 'SET_PRIMARY_CONTACT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: state.contacts.map(function (item) {\n          return item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'primary'\n          }) : _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'secondary'\n          });\n        })\n      });\n\n    case 'SET_PRIMARY_ADDRESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: state.address.map(function (item) {\n          return item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'primary'\n          }) : _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'secondary'\n          });\n        })\n      });\n\n    case 'SET_PRIMARY_SCHEDULE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        schedules: state.schedules.map(function (item) {\n          return item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'primary'\n          }) : _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'secondary'\n          });\n        })\n      });\n\n    case 'SET_PRIMARY_CARD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: state.cards.map(function (item) {\n          return item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'primary'\n          }) : _objectSpread(_objectSpread({}, item), {}, {\n            Type: 'secondary'\n          });\n        })\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport var ProfileProvider = function ProfileProvider(_ref) {\n  var children = _ref.children,\n      initData = _ref.initData;\n\n  var _useReducer = useReducer(reducer, _objectSpread(_objectSpread({}, initData), {}, {\n    schedules: schedules\n  })),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // console.log(state, 'profile provider state');\n\n\n  return __jsx(ProfileContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}
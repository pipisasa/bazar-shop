{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/shop/components/Loader/Loader.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nconst rotate = keyframes([\"from{transform:rotate(0deg);}to{transform:rotate(360deg);}\"]);\nconst SpinnerWrapper = styled.div.withConfig({\n  displayName: \"Loader__SpinnerWrapper\",\n  componentId: \"sc-11kkpdf-0\"\n})([\"width:100%;height:100vh;display:flex;align-items:center;justify-content:center;\"]);\nconst Spinner = styled.div.withConfig({\n  displayName: \"Loader__Spinner\",\n  componentId: \"sc-11kkpdf-1\"\n})([\"width:\", \";height:\", \";height:24px;border:4px solid #ffffff;border-top:3px solid \", \";border-radius:50%;transition-property:transform;animation-name:\", \";animation-duration:1.2s;animation-iteration-count:infinite;animation-timing-function:linear;\"], props => props.width ? props.width : '24px', props => props.height ? props.height : '24px', props => props.color ? props.color : '#009e7f', rotate);\n\nconst Loader = color => {\n  return __jsx(Spinner, _extends({}, color, {\n    width: \"100px\",\n    height: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport const LoaderWrapper = () => __jsx(SpinnerWrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, __jsx(Spinner, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}));\nexport default Loader;","map":{"version":3,"sources":["/Users/pipi/Documents/pr/shop/components/Loader/Loader.tsx"],"names":["React","styled","keyframes","rotate","SpinnerWrapper","div","Spinner","props","width","height","color","Loader","LoaderWrapper"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA,MAAMC,MAAM,GAAGD,SAAH,gEAAZ;AAKA,MAAME,cAAc,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,uFAApB;AAQA,MAAMC,OAAO,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,+PACDE,KAAD,IAAgBA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4B,MAD1C,EAEAD,KAAD,IAAgBA,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAArB,GAA8B,MAF7C,EAMcF,KAAD,IAAgBA,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,SANzD,EASOP,MATP,CAAb;;AAeA,MAAMQ,MAAM,GAAID,KAAD,IAAe;AAC5B,SAAO,MAAC,OAAD,eAAaA,KAAb;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAkC,IAAA,MAAM,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,OAAO,MAAME,aAAa,GAAG,MAC3B,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADK;AAMP,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {transform: rotate(0deg);}\n  to {transform: rotate(360deg);}\n`;\n\nconst SpinnerWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Spinner = styled.div`\n  width: ${(props:any) => (props.width ? props.width : '24px')};\n  height: ${(props:any) => (props.height ? props.height : '24px')};\n  height: 24px;\n  border: 4px solid #ffffff;\n  /* border-top: 4px solid #009e7f; */\n  border-top: 3px solid ${(props:any) => (props.color ? props.color : '#009e7f')};\n  border-radius: 50%;\n  transition-property: transform;\n  animation-name: ${rotate};\n  animation-duration: 1.2s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n`;\n\nconst Loader = (color:any) => {\n  return <Spinner {...color} width=\"100px\" height=\"100px\" />;\n};\n\nexport const LoaderWrapper = ()=>(\n  <SpinnerWrapper>\n    <Spinner/>\n  </SpinnerWrapper>\n)\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}
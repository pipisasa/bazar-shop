{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateAddress.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { FieldWrapper, Heading } from './Update.style';\nimport { UPDATE_ADDRESS, ADD_NEW_ADDRESS } from 'graphql/mutation/address';\nimport TextField from 'components/TextField/TextField';\nvar AddressValidationSchema = Yup.object().shape({\n  name: Yup.string().required('Title is required'),\n  info: Yup.string().required('Address is required')\n});\n\nvar UpdateAddress = function UpdateAddress(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    name: item.name || \"\",\n    info: item.info || \"\"\n  };\n\n  var _ref2 = item && item.slug ? useMutation(UPDATE_ADDRESS) : useMutation(ADD_NEW_ADDRESS),\n      _ref3 = _slicedToArray(_ref2, 1),\n      addAddressMutation = _ref3[0];\n\n  var _useContext = useContext(ProfileContext),\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref4) {\n      var setSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref4.setSubmitting;\n              console.log(values);\n              _context.next = 4;\n              return addAddressMutation({\n                variables: values\n              });\n\n            case 4:\n              // console.log(values, 'formik values');\n              dispatch({\n                type: 'ADD_OR_UPDATE_ADDRESS',\n                payload: values\n              });\n              closeModal();\n              setSubmitting(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: AddressValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, function (_ref6) {\n    var values = _ref6.values,\n        handleChange = _ref6.handleChange,\n        handleBlur = _ref6.handleBlur,\n        isSubmitting = _ref6.isSubmitting,\n        touched = _ref6.touched,\n        errors = _ref6.errors;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, item && item.id ? 'Edit Address' : 'Add New Address'), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }, __jsx(TextField, {\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"Enter Title\",\n      error: touched.name && errors.name,\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }\n    })), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    }, __jsx(TextField, {\n      id: \"info\",\n      as: \"textarea\",\n      placeholder: \"Enter Address\",\n      error: touched.info && errors.info,\n      value: values.info,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }\n    })), __jsx(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      title: \"Save Contact\",\n      size: \"medium\",\n      fullwidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\n_s(UpdateAddress, \"XwzB3x0+nq0JZ3zxC9axnFzVa40=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = UpdateAddress;\nexport default UpdateAddress;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"UpdateAddress__StyledInput\",\n  componentId: \"jotym3-0\"\n})([\"width:100%;height:54px;border-radius:6px;font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:400;padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('colors.fontFamily', 'Lato, sans-serif'), themeGet('colors.borderColor', '#e6e6e6'), themeGet('colors.darkBold', '#0D1136'), themeGet('colors.primary', '#009e7f'), themeGet('colorsdarkRegular', '#77798C'));\nvar StyledError = styled.div.withConfig({\n  displayName: \"UpdateAddress__StyledError\",\n  componentId: \"jotym3-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAddress\");","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/containers/Checkout/Update/UpdateAddress.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","Formik","Form","useMutation","ProfileContext","Button","FieldWrapper","Heading","UPDATE_ADDRESS","ADD_NEW_ADDRESS","TextField","AddressValidationSchema","object","shape","name","string","required","info","UpdateAddress","item","initialValues","id","slug","type","addAddressMutation","dispatch","handleSubmit","values","setSubmitting","console","log","variables","payload","handleChange","handleBlur","isSubmitting","touched","errors","StyledInput","input","StyledError","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { FieldWrapper, Heading } from './Update.style';\nimport { UPDATE_ADDRESS, ADD_NEW_ADDRESS } from 'graphql/mutation/address';\nimport TextField from 'components/TextField/TextField';\n\ntype Props = {\n  item?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: number | null;\n  type?: string;\n  name: string;\n  info: string;\n};\n\nconst AddressValidationSchema = Yup.object().shape({\n  name: Yup.string().required('Title is required'),\n  info: Yup.string().required('Address is required'),\n});\n\nconst UpdateAddress: React.FC<Props> = ({ item }) => {\n  const initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    name: item.name || \"\",\n    info: item.info || \"\",\n  };\n  const [addAddressMutation] = (item && item.slug) ? useMutation(UPDATE_ADDRESS) : useMutation(ADD_NEW_ADDRESS);\n  const { \n    // state, \n  dispatch } = useContext(ProfileContext);\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\n    console.log(values)\n    await addAddressMutation({\n      variables: values,\n    });\n    // console.log(values, 'formik values');\n    dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: values });\n    closeModal();\n    setSubmitting(false);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={AddressValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n        touched,\n        errors\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>{item && item.id ? 'Edit Address' : 'Add New Address'}</Heading>\n           <FieldWrapper>\n             <TextField\n               id='name'\n               type='text'\n               placeholder='Enter Title'\n               error={touched.name && errors.name}\n               value={values.name}\n               onChange={handleChange}\n               onBlur={handleBlur}\n             />\n           </FieldWrapper>\n\n           <FieldWrapper>\n             <TextField\n               id='info'\n               as='textarea'\n               placeholder='Enter Address'\n               error={touched.info && errors.info}\n               value={values.info}\n               onChange={handleChange}\n               onBlur={handleBlur}\n             />\n           </FieldWrapper>\n\n          <Button\n            disabled={isSubmitting}\n            type='submit'\n            title='Save Contact'\n            size='medium'\n            fullwidth={true}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateAddress;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 6px;\n  font-family: ${themeGet('colors.fontFamily', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.borderColor', '#e6e6e6')};\n  color: ${themeGet('colors.darkBold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: 400;\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colorsdarkRegular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;"]},"metadata":{},"sourceType":"module"}
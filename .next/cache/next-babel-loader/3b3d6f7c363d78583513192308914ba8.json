{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react'; // import styled from 'styled-components';\n// import { themeGet } from '@styled-system/theme-get';\n\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { FieldWrapper, Heading } from './Update.style';\nimport { UPDATE_ADDRESS, ADD_NEW_ADDRESS } from 'graphql/mutation/address';\nimport TextField from 'components/TextField/TextField';\nconst AddressValidationSchema = Yup.object().shape({\n  name: Yup.string().required('Title is required'),\n  info: Yup.string().required('Address is required')\n});\n\nconst UpdateAddress = ({\n  item\n}) => {\n  const initialValues = {\n    id: item.id || null,\n    slug: item.slug || null,\n    type: item.type || 'secondary',\n    name: item.name || \"\",\n    info: item.info || \"\"\n  };\n  const [addAddressMutation] = item && item.slug ? useMutation(UPDATE_ADDRESS) : useMutation(ADD_NEW_ADDRESS);\n  const {\n    // state, \n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    // console.log(values)\n    const {\n      data\n    } = await addAddressMutation({\n      variables: values\n    }); // console.log(values, 'formik values');\n\n    dispatch({\n      type: 'ADD_OR_UPDATE_ADDRESS',\n      payload: data\n    });\n    closeModal();\n    setSubmitting(false);\n  };\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: AddressValidationSchema\n  }, ({\n    values,\n    handleChange,\n    handleBlur,\n    isSubmitting,\n    touched,\n    errors\n  }) => __jsx(Form, null, __jsx(Heading, null, item && item.id ? 'Edit Address' : 'Add New Address'), __jsx(FieldWrapper, null, __jsx(TextField, {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Title\",\n    error: touched.name && errors.name,\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(FieldWrapper, null, __jsx(TextField, {\n    id: \"info\",\n    as: \"textarea\",\n    placeholder: \"Enter Address\",\n    error: touched.info && errors.info,\n    value: values.info,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    title: \"Save Contact\",\n    size: \"medium\",\n    fullwidth: true\n  })));\n};\n\nexport default UpdateAddress; // const StyledInput = styled.input`\n//   width: 100%;\n//   height: 54px;\n//   border-radius: 6px;\n//   font-family: ${themeGet('colors.fontFamily', 'Lato, sans-serif')};\n//   border: 1px solid ${themeGet('colors.borderColor', '#e6e6e6')};\n//   color: ${themeGet('colors.darkBold', '#0D1136')};\n//   font-size: 16px;\n//   line-height: 19px;\n//   font-weight: 400;\n//   padding: 0 18px;\n//   box-sizing: border-box;\n//   transition: border-color 0.25s ease;\n//   &:hover,\n//   &:focus {\n//     outline: 0;\n//   }\n//   &:focus {\n//     border-color: ${themeGet('colors.primary', '#009e7f')};\n//   }\n//   &::placeholder {\n//     color: ${themeGet('colorsdarkRegular', '#77798C')};\n//   }\n// `;\n// const StyledError = styled.div`\n//   color: red;\n//   padding-bottom: 10px;\n//   margin-top: -5px;\n// `;","map":null,"metadata":{},"sourceType":"module"}
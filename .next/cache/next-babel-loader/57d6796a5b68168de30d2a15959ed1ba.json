{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const cartItemsTotalPrice = (items, coupon = null) => {\n  let total = items.reduce((price, product) => {\n    if (product.salePrice) {\n      return price + product.salePrice * product.quantity;\n    }\n\n    return price + product.price * product.quantity;\n  }, 0);\n  const discount = coupon ? total * Number(coupon.discountInPercent) / 100 : 0;\n  return total - discount;\n}; // cartItems, cartItemToAdd\n\nconst addItemToCart = (state, action) => {\n  const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n\n  if (existingCartItemIndex > -1) {\n    const newState = [...state.items];\n    newState[existingCartItemIndex].quantity += action.payload.quantity;\n    localStorage.setItem(\"cart\", JSON.stringify(newState));\n    return newState;\n  }\n\n  const result = [...state.items, action.payload];\n  localStorage.setItem(\"cart\", JSON.stringify(result));\n  return result;\n}; // cartItems, cartItemToRemove\n\n\nconst removeItemFromCart = (state, action) => {\n  return state.items.reduce((acc, item) => {\n    if (item.id === action.payload.id) {\n      const newQuantity = item.quantity - action.payload.quantity;\n      let a = newQuantity > 0 ? [...acc, _objectSpread(_objectSpread({}, item), {}, {\n        quantity: newQuantity\n      })] : [...acc];\n      localStorage.setItem(\"cart\", JSON.stringify(a));\n      return a;\n    }\n\n    const result = [...acc, item];\n    localStorage.setItem(\"cart\", JSON.stringify(result));\n    return result;\n  }, []);\n};\n\nconst clearItemFromCart = (state, action) => {\n  const result = state.items.filter(item => item.id !== action.payload.id);\n  localStorage.setItem(\"cart\", JSON.stringify(result));\n  return result;\n};\n\nexport const reducer = (state, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case 'REHYDRATE':\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'TOGGLE_CART':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: !state.isOpen\n      });\n\n    case 'ADD_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: addItemToCart(state, action)\n      });\n\n    case 'REMOVE_ITEM':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: removeItemFromCart(state, action)\n      });\n\n    case 'CLEAR_ITEM_FROM_CART':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: clearItemFromCart(state, action)\n      });\n\n    case 'CLEAR_CART':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: []\n      });\n\n    case 'APPLY_COUPON':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        coupon: action.payload\n      });\n\n    case 'REMOVE_COUPON':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        coupon: null\n      });\n\n    case 'REFRESH_CART':\n      // console.log(\"REFRESH CART\", {...state, items: state.items.length ? [...state.items] : [...getLocalCart()]})\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload\n      });\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/contexts/cart/cart.reducer.tsx"],"names":["cartItemsTotalPrice","items","coupon","total","reduce","price","product","salePrice","quantity","discount","Number","discountInPercent","addItemToCart","state","action","existingCartItemIndex","findIndex","item","id","payload","newState","localStorage","setItem","JSON","stringify","result","removeItemFromCart","acc","newQuantity","a","clearItemFromCart","filter","reducer","type","isOpen","Error"],"mappings":"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","sourcesContent":["import { getLocalCart } from \"./use-cart\";\n\nexport const cartItemsTotalPrice = (items:any, coupon = null) => {\n  let total = items.reduce((price:any, product:any) => {\n    if (product.salePrice) {\n      return price + product.salePrice * product.quantity;\n    }\n    return price + product.price * product.quantity;\n  }, 0);\n  const discount = coupon\n    ? (total * Number(coupon.discountInPercent)) / 100\n    : 0;\n\n  return total - discount;\n};\n// cartItems, cartItemToAdd\nconst addItemToCart = (state:any, action:any) => {\n  const existingCartItemIndex = state.items.findIndex(\n    (item:any) => item.id === action.payload.id\n  );\n\n  if (existingCartItemIndex > -1) {\n    const newState = [...state.items];\n    newState[existingCartItemIndex].quantity += action.payload.quantity;\n    localStorage.setItem(\"cart\", JSON.stringify(newState))\n    return newState;\n  }\n  const result = [...state.items, action.payload];\n  localStorage.setItem(\"cart\", JSON.stringify(result));\n  return result;\n};\n\n// cartItems, cartItemToRemove\nconst removeItemFromCart = (state:any, action:any) => {\n  return state.items.reduce((acc:any, item:any) => {\n    if (item.id === action.payload.id) {\n      const newQuantity = item.quantity - action.payload.quantity;\n\n      let a = newQuantity > 0\n        ? [...acc, { ...item, quantity: newQuantity }]\n        : [...acc];\n      localStorage.setItem(\"cart\", JSON.stringify(a));\n      return a;\n    }\n    const result = [...acc, item];\n    localStorage.setItem(\"cart\", JSON.stringify(result));\n    return result;\n  }, []);\n};\n\nconst clearItemFromCart = (state:any, action:any) => {\n  const result = state.items.filter((item:any) => item.id !== action.payload.id);\n  localStorage.setItem(\"cart\", JSON.stringify(result));\n  return result;\n};\n\nexport const reducer = (state:any, action:any) => {\n  // console.log(action);\n  switch (action.type) {\n    case 'REHYDRATE':\n      return { ...state, ...action.payload };\n    case 'TOGGLE_CART':\n      return { ...state, isOpen: !state.isOpen };\n    case 'ADD_ITEM':\n      return { ...state, items: addItemToCart(state, action) };\n    case 'REMOVE_ITEM':\n      return { ...state, items: removeItemFromCart(state, action) };\n    case 'CLEAR_ITEM_FROM_CART':\n      return { ...state, items: clearItemFromCart(state, action) };\n    case 'CLEAR_CART':\n      return { ...state, items: [] };\n    case 'APPLY_COUPON':\n      return { ...state, coupon: action.payload };\n    case 'REMOVE_COUPON':\n      return { ...state, coupon: null };\n    case 'REFRESH_CART':\n      // console.log(\"REFRESH CART\", {...state, items: state.items.length ? [...state.items] : [...getLocalCart()]})\n      return {...state, items: action.payload}\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
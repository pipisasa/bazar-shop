{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { closeModal } from '@redq/reuse-modal';\nimport Button from 'components/Button/Button';\nimport { QuickViewWrapper, ProductDetailsWrapper, ProductPreview, DiscountPercent, ProductInfoWrapper, ProductInfo, ProductTitlePriceWrapper, ProductTitle, ProductWeight, ProductDescription, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, ModalClose } from './QuickView.style';\nimport { CURRENCY } from 'helper/constant';\nimport { CloseIcon, CartIcon } from 'components/AllSvgIcon';\nimport ReadMore from 'components/Truncate/Truncate';\nimport CarouselWithCustomDots from 'components/MultiCarousel/MultiCarousel';\nimport { useLocale } from 'contexts/language/language.provider';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/Counter/Counter';\n\nvar QuickView = function QuickView(_ref) {\n  var modalProps = _ref.modalProps,\n      deviceType = _ref.deviceType,\n      onModalClose = _ref.onModalClose;\n\n  var _useCart = useCart(),\n      addItem = _useCart.addItem,\n      removeItem = _useCart.removeItem,\n      isInCart = _useCart.isInCart,\n      getItem = _useCart.getItem;\n\n  var id = modalProps.id,\n      Type = modalProps.Type,\n      title = modalProps.title,\n      unit = modalProps.unit,\n      price = modalProps.price,\n      discountInPercent = modalProps.discountInPercent,\n      salePrice = modalProps.salePrice,\n      description = modalProps.description,\n      images = modalProps.images,\n      image = modalProps.image,\n      category = modalProps.category;\n  var galleryImgs = images;\n\n  var _useLocale = useLocale(),\n      isRtl = _useLocale.isRtl;\n\n  var handleAddClick = function handleAddClick(e) {\n    e.stopPropagation();\n    addItem(modalProps);\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    e.stopPropagation();\n    removeItem(modalProps);\n  };\n\n  function onCategoryClick(slug) {\n    Router.push({\n      pathname: \"/\",\n      query: {\n        category: slug // type: Type.slug \n\n      }\n    }).then(function () {\n      return window.scrollTo(0, 0);\n    });\n    closeModal();\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ModalClose, {\n    onClick: onModalClose\n  }, __jsx(CloseIcon, null)), __jsx(QuickViewWrapper, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\",\n    dir: \"ltr\"\n  }, !isRtl && __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: galleryImgs,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))), __jsx(ProductInfoWrapper, {\n    dir: isRtl ? 'rtl' : 'ltr'\n  }, __jsx(ProductInfo, null, __jsx(ProductTitlePriceWrapper, null, __jsx(ProductTitle, null, title), __jsx(ProductPriceWrapper, null, discountInPercent ? __jsx(SalePrice, null, CURRENCY, price) : '', __jsx(ProductPrice, null, CURRENCY, salePrice ? salePrice : price))), __jsx(ProductWeight, null, unit), __jsx(ProductDescription, null, __jsx(ReadMore, {\n    character: 600\n  }, description)), __jsx(ProductCartWrapper, null, __jsx(ProductCartBtn, null, !isInCart(id) ? __jsx(Button, {\n    title: \"Cart\",\n    intlButtonId: \"addCartButton\",\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: handleAddClick\n  }) : __jsx(Counter, {\n    value: getItem(id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick\n  }))), __jsx(ProductMeta, null, __jsx(MetaSingle, null, category && __jsx(React.Fragment, null, __jsx(MetaItem, {\n    onClick: function onClick() {\n      return onCategoryClick(category.slug);\n    },\n    key: category.id\n  }, category.title), category.parent && __jsx(MetaItem, {\n    onClick: function onClick() {\n      return onCategoryClick(category.parent.slug);\n    },\n    key: category.parent.id\n  }, category.parent.title)))))), isRtl && __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: galleryImgs,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))))));\n};\n\nexport default QuickView;","map":null,"metadata":{},"sourceType":"module"}
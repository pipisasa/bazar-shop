{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { SEO } from 'components/seo';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetails from 'containers/ProductDetails/ProductDetails';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, { ProductSingleContainer } from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\nimport { LoaderWrapper } from 'components/Loader/Loader';\n\nvar ProductPage = function ProductPage(_ref) {\n  var deviceType = _ref.deviceType;\n\n  var _useRouter = useRouter(),\n      slug = _useRouter.query.slug;\n\n  var _useQuery = useQuery(GET_PRODUCT_DETAILS, {\n    variables: {\n      slug: slug\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // console.log(data)\n\n\n  if (loading) {\n    return __jsx(LoaderWrapper, null);\n  }\n\n  if (error) return __jsx(\"div\", {\n    style: {\n      padding: \"150px 0 0 0\"\n    }\n  }, \"Error: \", error.message);\n  var content;\n\n  switch (data.product.Type) {\n    case 'BOOK':\n      {\n        content = __jsx(ProductDetailsBook, {\n          product: data.product,\n          deviceType: deviceType\n        });\n        break;\n      }\n\n    default:\n      {\n        content = __jsx(ProductDetails, {\n          product: data.product,\n          deviceType: deviceType\n        });\n      }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"\".concat(data.product.title, \" - PickBazar\"),\n    description: \"\".concat(data.product.title, \" Details\")\n  }), __jsx(Modal, null, __jsx(ProductSingleWrapper, null, __jsx(ProductSingleContainer, null, content, __jsx(CartPopUp, {\n    deviceType: deviceType\n  })))));\n};\n\nexport default withApollo(ProductPage);","map":null,"metadata":{},"sourceType":"module"}
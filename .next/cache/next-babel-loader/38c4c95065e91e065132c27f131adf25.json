{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { Waypoint } from 'react-waypoint'; // import SearchBox from 'components/SearchBox/SearchBox';\n\nimport { SearchContext } from 'contexts/search/search.context';\nimport { useStickyDispatch } from 'contexts/app/app.provider';\nimport { FormattedMessage } from 'react-intl';\nimport { BannerWrapper, BannerHeading, BannerSubHeading, BannerComponent } from './Banner.style'; // -----------------\n\nimport Carousel from 'react-multi-carousel';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { ArrowNext, ArrowPrev } from '../../components/AllSvgIcon';\nimport { useLocale } from 'contexts/language/language.provider';\n\nvar Banner = function Banner(_ref) {\n  var intlTitleId = _ref.intlTitleId,\n      intlDescriptionId = _ref.intlDescriptionId,\n      color = _ref.color;\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var router = useRouter(); // const { text } = state;\n\n  var pathname = router.pathname;\n\n  var handleSearchInput = function handleSearchInput(text) {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread(_objectSpread({}, state), {}, {\n        text: text\n      })\n    });\n  };\n\n  function handleClickSearchButton() {\n    var page = state.page,\n        urlState = _objectWithoutProperties(state, [\"page\"]);\n\n    router.push({\n      pathname: pathname,\n      query: _objectSpread({}, urlState)\n    }, {\n      pathname: pathname === '/' ? \"\".concat(pathname, \"grocery\") : pathname,\n      query: _objectSpread({}, urlState)\n    }, {\n      shallow: true\n    });\n  }\n\n  var useDispatch = useStickyDispatch();\n  var setSticky = useCallback(function () {\n    return useDispatch({\n      type: 'SET_STICKY'\n    });\n  }, [useDispatch]);\n  var removeSticky = useCallback(function () {\n    return useDispatch({\n      type: 'REMOVE_STICKY'\n    });\n  }, [useDispatch]);\n\n  var onWaypointPositionChange = function onWaypointPositionChange(_ref2) {\n    var currentPosition = _ref2.currentPosition;\n\n    if (!currentPosition || currentPosition === 'above') {\n      setSticky();\n    }\n  };\n\n  return __jsx(BannerWrapper, null, __jsx(BannerComponent, {\n    style: {\n      background: color ? color : 'red'\n    }\n  }, __jsx(BannerHeading, null, __jsx(FormattedMessage, {\n    id: intlTitleId,\n    defaultMessage: \"Set Your Title Through Language File\",\n    values: {\n      minute: 90\n    }\n  })), __jsx(BannerSubHeading, null, __jsx(FormattedMessage, {\n    id: intlDescriptionId,\n    defaultMessage: \"Set Your Description Through Language File\"\n  })), __jsx(Waypoint, {\n    onEnter: removeSticky,\n    onLeave: setSticky,\n    onPositionChange: onWaypointPositionChange\n  })));\n}; // ---------------------------------------------------------------\n\n\nvar ButtonPrev = styled('button').withConfig({\n  displayName: \"Banner__ButtonPrev\",\n  componentId: \"sc-1w4k5dh-0\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;left:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nvar ButtonNext = styled('button').withConfig({\n  displayName: \"Banner__ButtonNext\",\n  componentId: \"sc-1w4k5dh-1\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;right:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nvar ButtonGroupWrapper = styled('div').withConfig({\n  displayName: \"Banner__ButtonGroupWrapper\",\n  componentId: \"sc-1w4k5dh-2\"\n})([\"\"]);\n\nvar PrevButton = function PrevButton(_ref3) {\n  var _onClick = _ref3.onClick,\n      children = _ref3.children;\n  return __jsx(ButtonPrev, {\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _onClick();\n    },\n    className: \"prevButton\"\n  }, children);\n};\n\nvar NextButton = function NextButton(_ref4) {\n  var _onClick2 = _ref4.onClick,\n      children = _ref4.children;\n  return __jsx(ButtonNext, {\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _onClick2();\n    },\n    className: \"nextButton\"\n  }, children);\n};\n\nvar ButtonGroup = function ButtonGroup(_ref5) {\n  var next = _ref5.next,\n      previous = _ref5.previous;\n\n  var _useLocale = useLocale(),\n      isRtl = _useLocale.isRtl;\n\n  return __jsx(ButtonGroupWrapper, null, isRtl ? __jsx(React.Fragment, null, __jsx(NextButton, {\n    onClick: function onClick() {\n      return next();\n    },\n    className: \"rtl\"\n  }, __jsx(ArrowPrev, null)), __jsx(PrevButton, {\n    onClick: function onClick() {\n      return previous();\n    }\n  }, __jsx(ArrowNext, null))) : __jsx(React.Fragment, null, __jsx(PrevButton, {\n    onClick: function onClick() {\n      return previous();\n    }\n  }, __jsx(ArrowPrev, null)), __jsx(NextButton, {\n    onClick: function onClick() {\n      return next();\n    }\n  }, __jsx(ArrowNext, null))));\n};\n\nvar responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport var BannerCarousel = function BannerCarousel(_ref6) {\n  var data = _ref6.data,\n      _ref6$deviceType = _ref6.deviceType,\n      mobile = _ref6$deviceType.mobile,\n      tablet = _ref6$deviceType.tablet,\n      desktop = _ref6$deviceType.desktop,\n      component = _ref6.component,\n      _ref6$autoPlay = _ref6.autoPlay,\n      autoPlay = _ref6$autoPlay === void 0 ? false : _ref6$autoPlay,\n      _ref6$infinite = _ref6.infinite,\n      infinite = _ref6$infinite === void 0 ? true : _ref6$infinite,\n      customLeftArrow = _ref6.customLeftArrow,\n      customRightArrow = _ref6.customRightArrow,\n      itemClass = _ref6.itemClass,\n      isRtl = _ref6.isRtl,\n      props = _objectWithoutProperties(_ref6, [\"data\", \"deviceType\", \"component\", \"autoPlay\", \"infinite\", \"customLeftArrow\", \"customRightArrow\", \"itemClass\", \"isRtl\"]);\n\n  var deviceType = 'desktop';\n\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      padding: '90px 0 0 0'\n    },\n    dir: \"ltr\"\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, __jsx(Carousel, _extends({\n    arrows: false,\n    responsive: responsive,\n    ssr: true,\n    showDots: false,\n    slidesToSlide: 1,\n    infinite: infinite,\n    containerClass: \"container-with-dots\",\n    itemClass: itemClass,\n    deviceType: deviceType,\n    autoPlay: autoPlay,\n    autoPlaySpeed: 5000,\n    renderButtonGroupOutside: true,\n    additionalTransfrom: 0,\n    customButtonGroup: __jsx(ButtonGroup, null)\n  }, props), data.map(function (item, index) {\n    if (component) return component(item);\n    return __jsx(Banner, {\n      intlTitleId: \"womenClothsTitle\",\n      intlDescriptionId: \"womenClothsSubTitle\",\n      key: item.id,\n      color: item.color\n    });\n  }))));\n};\nexport default Banner;","map":null,"metadata":{},"sourceType":"module"}
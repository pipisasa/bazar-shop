{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/roma/Documents/shop/containers/Products/Products.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    productList{\\n      id\\n      title\\n      slug\\n      description\\n      Type\\n      category{\\n        id\\n        title\\n        slug\\n        parent{\\n          id\\n          title\\n          slug\\n        }\\n      }\\n      unit\\n      image\\n      price\\n      salePrice\\n      discountPercent\\n      createdAt\\n      images{\\n        image\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport gql from 'graphql-tag';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport ProductCard from 'components/ProductCard/ProductCard';\nimport { ProductsRow, ProductsCol, ButtonWrapper, LoaderWrapper, LoaderItem, ProductCardWrapper } from './Products.style';\nimport { CURRENCY } from 'helper/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/NoResult/NoResult';\nvar QuickView = dynamic(_c = function _c() {\n  return import('../QuickView/QuickView');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../QuickView/QuickView')];\n    },\n    modules: ['../QuickView/QuickView']\n  }\n});\n_c2 = QuickView;\nvar GET_PRODUCTS = gql(_templateObject());\nexport var Products = function Products(_ref) {\n  _s();\n\n  var _data$productList;\n\n  var deviceType = _ref.deviceType,\n      type = _ref.type,\n      _ref$fetchLimit = _ref.fetchLimit,\n      fetchLimit = _ref$fetchLimit === void 0 ? 8 : _ref$fetchLimit,\n      _ref$loadMore = _ref.loadMore,\n      loadMore = _ref$loadMore === void 0 ? true : _ref$loadMore;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useQuery = useQuery(GET_PRODUCTS, {// variables: {\n    //   type: type,\n    //   text: router.query.text,\n    //   category: router.query.category,\n    //   offset: 0,\n    //   limit: fetchLimit,\n    // },\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore; // console.log(data)\n\n\n  if (data) data.productList.discountInPercent = data === null || data === void 0 ? void 0 : (_data$productList = data.productList) === null || _data$productList === void 0 ? void 0 : _data$productList.discountPercent; // ------------------------------------------------------------------------------------------\n  // const data = {\n  //   products:{\n  //     hasMore:false,\n  //     items: fakeDB\n  //   },\n  // };\n  // const error = false;\n  // const loading = false;\n  // const fetchMore = (obj)=>{};\n  // ------------------------------------------------------------------------------------------\n  // Quick View Modal\n\n  var handleModalClose = function handleModalClose() {\n    var as = router.asPath;\n    router.push(as, as, {\n      shallow: true\n    });\n    closeModal();\n  };\n\n  var handleQuickViewModal = function handleQuickViewModal(modalProps, deviceType, onModalClose) {\n    if (router.pathname === '/product/[slug]') {\n      var _as = \"/product/\".concat(modalProps.slug);\n\n      router.push(router.pathname, _as);\n      return;\n    }\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: false,\n      component: QuickView,\n      componentProps: {\n        modalProps: modalProps,\n        deviceType: deviceType,\n        onModalClose: onModalClose\n      },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0\n        }\n      }\n    });\n    var href = router.asPath;\n    var as = \"/product/\".concat(modalProps.slug);\n    router.push(href, as, {\n      shallow: true\n    });\n  };\n\n  if (loading) {\n    return __jsx(LoaderWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    })), __jsx(LoaderItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, error.message);\n  }\n\n  ;\n\n  if (!data || !data.productList || data.productList.length === 0) {\n    return __jsx(NoResultFound, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var handleLoadMore = function handleLoadMore() {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.productList.length),\n        limit: fetchLimit\n      },\n      updateQuery: function updateQuery(prev, _ref2) {\n        var fetchMoreResult = _ref2.fetchMoreResult;\n        toggleLoading(false);\n\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        return {\n          products: {\n            __typename: prev.products.__typename,\n            items: [].concat(_toConsumableArray(prev.products.items), _toConsumableArray(fetchMoreResult.products.items)),\n            hasMore: fetchMoreResult.products.hasMore\n          }\n        };\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProductsRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, data.productList.map(function (item, index) {\n    return __jsx(ProductsCol, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, __jsx(ProductCardWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, __jsx(Fade, {\n      duration: 800,\n      delay: index * 10,\n      style: {\n        height: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, __jsx(ProductCard, {\n      title: item.title,\n      description: item.description,\n      image: item.image,\n      weight: item.unit,\n      currency: CURRENCY,\n      price: item.price,\n      salePrice: item.salePrice,\n      discountInPercent: item.discountInPercent,\n      data: item,\n      deviceType: deviceType,\n      onClick: function onClick() {\n        return handleQuickViewModal(item, deviceType, handleModalClose);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }))));\n  })), loadMore && data.hasMore && __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleLoadMore,\n    title: \"Load More\",\n    intlButtonId: \"loadMoreBtn\",\n    size: \"small\",\n    isLoading: loadingMore,\n    loader: __jsx(Loader, {\n      color: \"#009E7F\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }),\n    style: {\n      minWidth: 135,\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#009E7F'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Products, \"ueba3JWNO7pCfJpEXFd18E8kiNE=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c3 = Products;\nexport default Products;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuickView$dynamic\");\n$RefreshReg$(_c2, \"QuickView\");\n$RefreshReg$(_c3, \"Products\");","map":{"version":3,"sources":["/home/roma/Documents/shop/containers/Products/Products.tsx"],"names":["React","useState","useRouter","dynamic","gql","openModal","closeModal","ProductCard","ProductsRow","ProductsCol","ButtonWrapper","LoaderWrapper","LoaderItem","ProductCardWrapper","CURRENCY","useQuery","Button","Loader","Placeholder","Fade","NoResultFound","QuickView","GET_PRODUCTS","Products","deviceType","type","fetchLimit","loadMore","router","loadingMore","toggleLoading","data","error","loading","fetchMore","productList","discountInPercent","discountPercent","handleModalClose","as","asPath","push","shallow","handleQuickViewModal","modalProps","onModalClose","pathname","slug","show","overlayClassName","closeOnClickOutside","component","componentProps","closeComponent","config","enableResizing","disableDragging","className","width","y","height","transition","mass","tension","friction","href","message","length","handleLoadMore","variables","offset","Number","limit","updateQuery","prev","fetchMoreResult","products","__typename","items","hasMore","map","item","index","title","description","image","unit","price","salePrice","minWidth","backgroundColor","border","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport gql from 'graphql-tag';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport ProductCard from 'components/ProductCard/ProductCard';\nimport {\n  ProductsRow,\n  ProductsCol,\n  ButtonWrapper,\n  LoaderWrapper,\n  LoaderItem,\n  ProductCardWrapper,\n} from './Products.style';\nimport { CURRENCY } from 'helper/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Fade from 'react-reveal/Fade';\nimport NoResultFound from 'components/NoResult/NoResult';\nimport fakeDB from '../../helper/fakeDB';\n\nconst QuickView = dynamic(() => import('../QuickView/QuickView'));\n\nconst GET_PRODUCTS = gql`\n  query {\n    productList{\n      id\n      title\n      slug\n      description\n      Type\n      category{\n        id\n        title\n        slug\n        parent{\n          id\n          title\n          slug\n        }\n      }\n      unit\n      image\n      price\n      salePrice\n      discountPercent\n      createdAt\n      images{\n        image\n      }\n    }\n  }\n`;\n\ntype ProductsProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  type: string;\n  fetchLimit?: number;\n  loadMore?: boolean;\n};\nexport const Products: React.FC<ProductsProps> = ({\n  deviceType,\n  type,\n  fetchLimit = 8,\n  loadMore = true,\n}) => {\n  const router = useRouter();\n  const [loadingMore, toggleLoading] = useState(false);\n  const { data, error, loading, fetchMore } = useQuery(GET_PRODUCTS, {\n    // variables: {\n    //   type: type,\n    //   text: router.query.text,\n    //   category: router.query.category,\n    //   offset: 0,\n    //   limit: fetchLimit,\n    // },\n  });\n  // console.log(data)\n  if(data)data.productList.discountInPercent = data?.productList?.discountPercent;\n// ------------------------------------------------------------------------------------------\n  // const data = {\n  //   products:{\n  //     hasMore:false,\n  //     items: fakeDB\n  //   },\n  // };\n  // const error = false;\n  // const loading = false;\n  // const fetchMore = (obj)=>{};\n// ------------------------------------------------------------------------------------------\n  // Quick View Modal\n  const handleModalClose = () => {\n    const as = router.asPath;\n    router.push(as, as, { shallow: true });\n    closeModal();\n  };\n\n  const handleQuickViewModal = (\n    modalProps: any,\n    deviceType: any,\n    onModalClose: any\n  ) => {\n    if (router.pathname === '/product/[slug]') {\n      const as = `/product/${modalProps.slug}`;\n      router.push(router.pathname, as);\n      return;\n    }\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: false,\n      component: QuickView,\n      componentProps: { modalProps, deviceType, onModalClose },\n      closeComponent: 'div',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 900,\n        y: 30,\n        height: 'auto',\n        transition: {\n          mass: 1,\n          tension: 0,\n          friction: 0,\n        },\n      },\n    });\n    const href = router.asPath;\n    const as = `/product/${modalProps.slug}`;\n    router.push(href, as, { shallow: true });\n  };\n\n  if (loading) {\n    return (\n      <LoaderWrapper>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n        <LoaderItem>\n          <Placeholder />\n        </LoaderItem>\n      </LoaderWrapper>\n    );\n  }\n\n  if (error){return <div>{error.message}</div>};\n  if (!data || !data.productList || data.productList.length === 0) {\n    return <NoResultFound />;\n  }\n  const handleLoadMore = () => {\n    toggleLoading(true);\n    fetchMore({\n      variables: {\n        offset: Number(data.productList.length),\n        limit: fetchLimit,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        toggleLoading(false);\n        if (!fetchMoreResult) {\n          return prev;\n        }\n        return {\n          products: {\n            __typename: prev.products.__typename,\n            items: [...prev.products.items, ...fetchMoreResult.products.items],\n            hasMore: fetchMoreResult.products.hasMore,\n          },\n        };\n      },\n    });\n  };\n\n  return (\n    <>\n      <ProductsRow>\n        {data.productList.map((item: any, index: number) => (\n          <ProductsCol key={index}>\n            <ProductCardWrapper>\n              <Fade\n                duration={800}\n                delay={index * 10}\n                style={{ height: '100%' }}\n              >\n                <ProductCard\n                  title={item.title}\n                  description={item.description}\n                  image={item.image}\n                  weight={item.unit}\n                  currency={CURRENCY}\n                  price={item.price}\n                  salePrice={item.salePrice}\n                  discountInPercent={item.discountInPercent}\n                  data={item}\n                  deviceType={deviceType}\n                  onClick={() =>\n                    handleQuickViewModal(item, deviceType, handleModalClose)\n                  }\n                />\n              </Fade>\n            </ProductCardWrapper>\n          </ProductsCol>\n        ))}\n      </ProductsRow>\n      {loadMore && data.hasMore && (\n        <ButtonWrapper>\n          <Button\n            onClick={handleLoadMore}\n            title=\"Load More\"\n            intlButtonId=\"loadMoreBtn\"\n            size=\"small\"\n            isLoading={loadingMore}\n            loader={<Loader color=\"#009E7F\" />}\n            style={{\n              minWidth: 135,\n              backgroundColor: '#ffffff',\n              border: '1px solid #f1f1f1',\n              color: '#009E7F',\n            }}\n          />\n        </ButtonWrapper>\n      )}\n    </>\n  );\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}
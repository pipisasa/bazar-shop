{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/contexts/profile/profile.provider.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react'; // import uuidV4 from 'uuid/v4';\n\nimport schedules from 'containers/Checkout/data';\nimport { ProfileContext } from './profile.context';\n\nfunction reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case 'UPDATE_ME_INFO':\n      return _objectSpread(_objectSpread({}, action.payload), {}, {\n        schedules\n      });\n\n    case 'HANDLE_ON_INPUT_CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.payload.field]: action.payload.value\n      });\n\n    case 'ADD_OR_UPDATE_CONTACT':\n      if (action.payload.updateContact) {\n        const {\n          payload: {\n            updateContact: {\n              contact\n            }\n          }\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contacts: state.contacts.map(item => item.id === contact.id ? _objectSpread(_objectSpread({}, item), contact) : item)\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: [...state.contacts, action.payload.createContact.contact]\n      });\n\n    case 'DELETE_CONTACT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: state.contacts.filter(item => item.id !== action.payload)\n      });\n\n    case 'ADD_OR_UPDATE_ADDRESS':\n      if (action.payload.updateAddress) {\n        const {\n          payload: {\n            updateAddress: {\n              address\n            }\n          }\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          address: state.address.map(item => item.id === address.id ? _objectSpread(_objectSpread({}, item), address) : item)\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: [...state.address, action.payload.createAddress.address]\n      });\n\n    case 'DELETE_ADDRESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: state.address.filter(item => item.id !== action.payload)\n      });\n\n    case 'ADD_CARD':\n      const newCard = {\n        id: action.payload.id,\n        Type: state.cards.length === '0' ? 'primary' : 'secondary',\n        cardType: action.payload.brand.toLowerCase(),\n        firstName: state.firstName,\n        lastName: state.lastName,\n        lastFourDigit: action.payload.last4\n      };\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: [newCard, ...state.cards]\n      });\n\n    case 'DELETE_CARD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: state.cards.filter(item => item.id !== action.payload)\n      });\n\n    case 'SET_PRIMARY_CONTACT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: state.contacts.map(item => item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'primary'\n        }) : _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'secondary'\n        }))\n      });\n\n    case 'SET_PRIMARY_ADDRESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: state.address.map(item => item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'primary'\n        }) : _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'secondary'\n        }))\n      });\n\n    case 'SET_PRIMARY_SCHEDULE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        schedules: state.schedules.map(item => item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'primary'\n        }) : _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'secondary'\n        }))\n      });\n\n    case 'SET_PRIMARY_CARD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: state.cards.map(item => item.id === action.payload ? _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'primary'\n        }) : _objectSpread(_objectSpread({}, item), {}, {\n          Type: 'secondary'\n        }))\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const ProfileProvider = ({\n  children,\n  initData\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, _objectSpread(_objectSpread({}, initData), {}, {\n    schedules\n  })); // console.log(state, 'profile provider state');\n\n  return __jsx(ProfileContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/contexts/profile/profile.provider.tsx"],"names":["React","useReducer","schedules","ProfileContext","reducer","state","action","console","log","type","payload","field","value","updateContact","contact","contacts","map","item","id","createContact","filter","updateAddress","address","createAddress","newCard","Type","cards","length","cardType","brand","toLowerCase","firstName","lastName","lastFourDigit","last4","ProfileProvider","children","initData","dispatch"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n// import uuidV4 from 'uuid/v4';\nimport schedules from 'containers/Checkout/data';\nimport { ProfileContext } from './profile.context';\n\ntype Action =\n  | { type: 'UPDATE_ME_INFO', payload: any}\n  | { type: 'HANDLE_ON_INPUT_CHANGE'; payload: any }\n  | { type: 'ADD_OR_UPDATE_CONTACT'; payload: any }\n  | { type: 'DELETE_CONTACT'; payload: any }\n  | { type: 'ADD_OR_UPDATE_ADDRESS'; payload: any }\n  | { type: 'DELETE_ADDRESS'; payload: any }\n  | { type: 'ADD_CARD'; payload: any }\n  | { type: 'DELETE_CARD'; payload: any }\n  | { type: 'SET_PRIMARY_CONTACT'; payload: any }\n  | { type: 'SET_PRIMARY_ADDRESS'; payload: any }\n  | { type: 'SET_PRIMARY_SCHEDULE'; payload: any }\n  | { type: 'SET_PRIMARY_CARD'; payload: any };\nfunction reducer(state: any, action: Action): any {\n  console.log(action)\n  switch (action.type) {\n    case 'UPDATE_ME_INFO': \n    return {...action.payload, schedules};\n    case 'HANDLE_ON_INPUT_CHANGE':\n      return { ...state, [action.payload.field]: action.payload.value };\n    case 'ADD_OR_UPDATE_CONTACT':\n      if (action.payload.updateContact) {\n        const {payload:{updateContact:{contact}}} = action;\n        return {\n          ...state,\n          contacts: state.contacts.map((item: any) =>\n            item.id === contact.id\n              ? { ...item, ...contact }\n              : item\n          ),\n        };\n      }\n    return {\n      ...state,\n      contacts: [...state.contacts, action.payload.createContact.contact],\n    };\n\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (item: any) => item.id !== action.payload\n        ),\n      };\n    case 'ADD_OR_UPDATE_ADDRESS':\n      if (action.payload.updateAddress) {\n        const {payload:{updateAddress:{address}}} = action;\n        return {\n          ...state,\n          address: state.address.map((item: any) =>\n            item.id === address.id\n              ? { ...item, ...address }\n              : item\n          ),\n        };\n      }\n      return {\n        ...state,\n        address: [...state.address, action.payload.createAddress.address],\n      };\n    case 'DELETE_ADDRESS':\n      return {\n        ...state,\n        address: state.address.filter(\n          (item: any) => item.id !== action.payload\n        ),\n      };\n    case 'ADD_CARD':\n      const newCard = {\n        id: action.payload.id,\n        Type: state.cards.length === '0' ? 'primary' : 'secondary',\n        cardType: action.payload.brand.toLowerCase(),\n        firstName: state.firstName,\n        lastName: state.lastName,\n        lastFourDigit: action.payload.last4,\n      };\n      return {\n        ...state,\n        cards: [newCard, ...state.cards],\n      };\n    case 'DELETE_CARD':\n      return {\n        ...state,\n        cards: state.cards.filter((item: any) => item.id !== action.payload),\n      };\n    case 'SET_PRIMARY_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, Type: 'primary' }\n            : { ...item, Type: 'secondary' }\n        ),\n      };\n    case 'SET_PRIMARY_ADDRESS':\n      return {\n        ...state,\n        address: state.address.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, Type: 'primary' }\n            : { ...item, Type: 'secondary' }\n        ),\n      };\n    case 'SET_PRIMARY_SCHEDULE':\n      return {\n        ...state,\n        schedules: state.schedules.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, Type: 'primary' }\n            : { ...item, Type: 'secondary' }\n        ),\n      };\n    case 'SET_PRIMARY_CARD':\n      return {\n        ...state,\n        cards: state.cards.map((item: any) =>\n          item.id === action.payload\n            ? { ...item, Type: 'primary' }\n            : { ...item, Type: 'secondary' }\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\ntype ProfileProviderProps = {\n  initData: any;\n};\n\nexport const ProfileProvider: React.FunctionComponent<ProfileProviderProps> = ({\n  children,\n  initData,\n}) => {\n  const [state, dispatch] = useReducer(reducer, { ...initData, schedules });\n  // console.log(state, 'profile provider state');\n\n  return (\n    <ProfileContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
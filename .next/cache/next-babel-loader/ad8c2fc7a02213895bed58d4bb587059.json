{"ast":null,"code":"var _jsxFileName = \"/Users/pipi/Documents/pr/react_apps/shop/components/ProductCard/ProductCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport Image from 'components/Image/Image';\nimport Button from '../Button/Button';\nimport { CartIcon } from '../AllSvgIcon';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, ProductPreviewWrapper } from './ProductCard.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/Counter/Counter';\nimport { cartAnimation } from 'helper/cart-animation';\nimport Link from 'next/link';\n\nconst ProductCard = (_ref) => {\n  let {\n    title,\n    image,\n    weight,\n    price,\n    salePrice,\n    discountInPercent,\n    cartProducts,\n    addToCart,\n    updateCart,\n    value,\n    currency,\n    onChange,\n    increment,\n    decrement,\n    data,\n    deviceType,\n    onClick,\n    link\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\", \"link\"]);\n\n  const {\n    addItem,\n    removeItem,\n    getItem,\n    isInCart,\n    items\n  } = useCart();\n\n  const handleAddClick = e => {\n    e.stopPropagation();\n    addItem(data);\n\n    if (!isInCart(data.id)) {\n      cartAnimation(e);\n    }\n  };\n\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const handleCLickPreview = e => {\n    e.stopPropagation();\n    onClick(e);\n  };\n\n  return __jsx(Link, {\n    href: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(ProductCardWrapper, {\n    className: \"product-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(ProductImageWrapper, {\n    onMouseOver: () => setIsOpen(true),\n    onMouseOut: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(ProductPreviewWrapper, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: handleCLickPreview,\n    size: \"small\",\n    title: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), __jsx(Image, {\n    url: image,\n    media: true,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, discountInPercent, \"%\")) : ''), __jsx(ProductInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"product-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"span\", {\n    className: \"product-weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, weight), __jsx(\"div\", {\n    className: \"product-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"productPriceWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, discountInPercent ? __jsx(\"span\", {\n    className: \"discountedPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, currency, price) : '', __jsx(\"span\", {\n    className: \"product-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, currency, salePrice ? salePrice : price)), !isInCart(data.id) ? __jsx(Button, {\n    title: \"Cart\",\n    intlButtonId: \"addCartButton\",\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }),\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }) : __jsx(Counter, {\n    value: getItem(data.id).quantity,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["/Users/pipi/Documents/pr/react_apps/shop/components/ProductCard/ProductCard.tsx"],"names":["React","useState","Image","Button","CartIcon","ProductCardWrapper","ProductImageWrapper","ProductInfo","DiscountPercent","ProductPreviewWrapper","useCart","Counter","cartAnimation","Link","ProductCard","title","image","weight","price","salePrice","discountInPercent","cartProducts","addToCart","updateCart","value","currency","onChange","increment","decrement","data","deviceType","onClick","link","props","addItem","removeItem","getItem","isInCart","items","handleAddClick","e","stopPropagation","id","handleRemoveClick","isOpen","setIsOpen","handleCLickPreview","position","quantity"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Image from 'components/Image/Image';\nimport Button from '../Button/Button';\nimport { CartIcon } from '../AllSvgIcon';\nimport {\n  ProductCardWrapper,\n  ProductImageWrapper,\n  ProductInfo,\n  SaleTag,\n  DiscountPercent,\n  ProductPreviewWrapper,\n} from './ProductCard.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/Counter/Counter';\nimport { cartAnimation } from 'helper/cart-animation';\nimport Link from 'next/link';\n\ntype ProductCardProps = {\n  title: string;\n  image: any;\n  weight: string;\n  currency: string;\n  description: string;\n  price: number;\n  salePrice?: number;\n  discountInPercent?: number;\n  data: any;\n  onClick?: (e: any) => void;\n  onChange?: (e: any) => void;\n  increment?: (e: any) => void;\n  decrement?: (e: any) => void;\n  cartProducts?: any;\n  addToCart?: any;\n  updateCart?: any;\n  value?: any;\n  deviceType?: any;\n  link: string;\n};\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  title,\n  image,\n  weight,\n  price,\n  salePrice,\n  discountInPercent,\n  cartProducts,\n  addToCart,\n  updateCart,\n  value,\n  currency,\n  onChange,\n  increment,\n  decrement,\n  data,\n  deviceType,\n  onClick,\n  link,\n  ...props\n}) => {\n  const { addItem, removeItem, getItem, isInCart, items } = useCart();\n  const handleAddClick = (e) => {\n    e.stopPropagation();\n    addItem(data);\n    if (!isInCart(data.id)) {\n      cartAnimation(e);\n    }\n  };\n  const handleRemoveClick = (e) => {\n    e.stopPropagation();\n    removeItem(data);\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const handleCLickPreview = (e)=>{\n    e.stopPropagation()\n    onClick(e);\n  }\n  return (\n    <Link href={link}>\n      <ProductCardWrapper className=\"product-card\">\n        <ProductImageWrapper onMouseOver={()=>setIsOpen(true)} onMouseOut={()=>setIsOpen(false)}>\n          <ProductPreviewWrapper isOpen={isOpen}>\n            <Button onClick={handleCLickPreview} size=\"small\" title=\"preview\"/>\n          </ProductPreviewWrapper>\n          <Image\n            url={image}\n            media\n            className=\"product-image\"\n            style={{ position: 'relative' }}\n            alt={title}\n          />\n          {discountInPercent ? (\n            <>\n              <DiscountPercent>{discountInPercent}%</DiscountPercent>\n            </>\n          ) : (\n            ''\n          )}\n        </ProductImageWrapper>\n        <ProductInfo>\n          <h3 className=\"product-title\">{title}</h3>\n          <span className=\"product-weight\">{weight}</span>\n          <div className=\"product-meta\">\n            <div className=\"productPriceWrapper\">\n              {discountInPercent ? (\n                <span className=\"discountedPrice\">\n                  {currency}\n                  {price}\n                </span>\n              ) : (\n                ''\n              )}\n\n              <span className=\"product-price\">\n                {currency}\n                {salePrice ? salePrice : price}\n              </span>\n            </div>\n\n            {!isInCart(data.id) ? (\n              <Button\n                title=\"Cart\"\n                intlButtonId=\"addCartButton\"\n                iconPosition=\"left\"\n                colors=\"primary\"\n                size=\"small\"\n                variant=\"outlined\"\n                className=\"cart-button\"\n                icon={<CartIcon />}\n                onClick={handleAddClick}\n              />\n            ) : (\n              <Counter\n                value={getItem(data.id).quantity}\n                onDecrement={handleRemoveClick}\n                onIncrement={handleAddClick}\n              />\n            )}\n          </div>\n        </ProductInfo>\n      </ProductCardWrapper>\n    </Link>\n  );\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}